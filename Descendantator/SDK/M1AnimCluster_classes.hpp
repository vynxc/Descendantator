#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: M1AnimCluster

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "M1Actor_classes.hpp"


namespace SDK
{

// Class M1AnimCluster.M1AnimClusterManager
// 0x0070 (0x0098 - 0x0028)
class UM1AnimClusterManager final : public UObject
{
public:
	uint8                                         Pad_28[0x70];                                      // 0x0028(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void UnregisterActor(class AActor* InActor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"M1AnimClusterManager">();
	}
	static class UM1AnimClusterManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UM1AnimClusterManager>();
	}
};
static_assert(alignof(UM1AnimClusterManager) == 0x000008, "Wrong alignment on UM1AnimClusterManager");
static_assert(sizeof(UM1AnimClusterManager) == 0x000098, "Wrong size on UM1AnimClusterManager");

// Class M1AnimCluster.M1AnimSharingMetricBase
// 0x0000 (0x0028 - 0x0028)
class UM1AnimSharingMetricBase : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"M1AnimSharingMetricBase">();
	}
	static class UM1AnimSharingMetricBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UM1AnimSharingMetricBase>();
	}
};
static_assert(alignof(UM1AnimSharingMetricBase) == 0x000008, "Wrong alignment on UM1AnimSharingMetricBase");
static_assert(sizeof(UM1AnimSharingMetricBase) == 0x000028, "Wrong size on UM1AnimSharingMetricBase");

// Class M1AnimCluster.M1AnimSharingMetricLocomotionIdle
// 0x0000 (0x0028 - 0x0028)
class UM1AnimSharingMetricLocomotionIdle final : public UM1AnimSharingMetricBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"M1AnimSharingMetricLocomotionIdle">();
	}
	static class UM1AnimSharingMetricLocomotionIdle* GetDefaultObj()
	{
		return GetDefaultObjImpl<UM1AnimSharingMetricLocomotionIdle>();
	}
};
static_assert(alignof(UM1AnimSharingMetricLocomotionIdle) == 0x000008, "Wrong alignment on UM1AnimSharingMetricLocomotionIdle");
static_assert(sizeof(UM1AnimSharingMetricLocomotionIdle) == 0x000028, "Wrong size on UM1AnimSharingMetricLocomotionIdle");

// Class M1AnimCluster.M1AnimSharingMetricLocomotionMove
// 0x0000 (0x0028 - 0x0028)
class UM1AnimSharingMetricLocomotionMove final : public UM1AnimSharingMetricBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"M1AnimSharingMetricLocomotionMove">();
	}
	static class UM1AnimSharingMetricLocomotionMove* GetDefaultObj()
	{
		return GetDefaultObjImpl<UM1AnimSharingMetricLocomotionMove>();
	}
};
static_assert(alignof(UM1AnimSharingMetricLocomotionMove) == 0x000008, "Wrong alignment on UM1AnimSharingMetricLocomotionMove");
static_assert(sizeof(UM1AnimSharingMetricLocomotionMove) == 0x000028, "Wrong size on UM1AnimSharingMetricLocomotionMove");

// Class M1AnimCluster.M1AnimSharingMetricActive
// 0x0000 (0x0028 - 0x0028)
class UM1AnimSharingMetricActive final : public UM1AnimSharingMetricBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"M1AnimSharingMetricActive">();
	}
	static class UM1AnimSharingMetricActive* GetDefaultObj()
	{
		return GetDefaultObjImpl<UM1AnimSharingMetricActive>();
	}
};
static_assert(alignof(UM1AnimSharingMetricActive) == 0x000008, "Wrong alignment on UM1AnimSharingMetricActive");
static_assert(sizeof(UM1AnimSharingMetricActive) == 0x000028, "Wrong size on UM1AnimSharingMetricActive");

// Class M1AnimCluster.M1AnimSharingPresetInterface
// 0x0000 (0x0028 - 0x0028)
class IM1AnimSharingPresetInterface final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"M1AnimSharingPresetInterface">();
	}
	static class IM1AnimSharingPresetInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IM1AnimSharingPresetInterface>();
	}
};
static_assert(alignof(IM1AnimSharingPresetInterface) == 0x000008, "Wrong alignment on IM1AnimSharingPresetInterface");
static_assert(sizeof(IM1AnimSharingPresetInterface) == 0x000028, "Wrong size on IM1AnimSharingPresetInterface");

// Class M1AnimCluster.M1AnimSharingSkeletalMeshComponent
// 0x0000 (0x0E90 - 0x0E90)
class UM1AnimSharingSkeletalMeshComponent final : public UM1SkeletalMeshComponentBudgeted
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"M1AnimSharingSkeletalMeshComponent">();
	}
	static class UM1AnimSharingSkeletalMeshComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UM1AnimSharingSkeletalMeshComponent>();
	}
};
static_assert(alignof(UM1AnimSharingSkeletalMeshComponent) == 0x000010, "Wrong alignment on UM1AnimSharingSkeletalMeshComponent");
static_assert(sizeof(UM1AnimSharingSkeletalMeshComponent) == 0x000E90, "Wrong size on UM1AnimSharingSkeletalMeshComponent");

}

