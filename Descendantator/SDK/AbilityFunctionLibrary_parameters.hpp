#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AbilityFunctionLibrary

#include "Basic.hpp"

#include "M1Data_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "M1_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function AbilityFunctionLibrary.AbilityFunctionLibrary_C.AttatchArcheShield
// 0x0020 (0x0020 - 0x0000)
struct AbilityFunctionLibrary_C_AttatchArcheShield final
{
public:
	struct FVector                                SpawnLocation;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   ArcheSheildRowName;                                // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctionLibrary_C_AttatchArcheShield) == 0x000008, "Wrong alignment on AbilityFunctionLibrary_C_AttatchArcheShield");
static_assert(sizeof(AbilityFunctionLibrary_C_AttatchArcheShield) == 0x000020, "Wrong size on AbilityFunctionLibrary_C_AttatchArcheShield");
static_assert(offsetof(AbilityFunctionLibrary_C_AttatchArcheShield, SpawnLocation) == 0x000000, "Member 'AbilityFunctionLibrary_C_AttatchArcheShield::SpawnLocation' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_AttatchArcheShield, __WorldContext) == 0x000010, "Member 'AbilityFunctionLibrary_C_AttatchArcheShield::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_AttatchArcheShield, ArcheSheildRowName) == 0x000018, "Member 'AbilityFunctionLibrary_C_AttatchArcheShield::ArcheSheildRowName' has a wrong offset!");

// Function AbilityFunctionLibrary.AbilityFunctionLibrary_C.CalcPivotLocation
// 0x0070 (0x0070 - 0x0000)
struct AbilityFunctionLibrary_C_CalcPivotLocation final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        MinPivotForwardDistance;                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxPivotForwardDistance;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PivotLocation;                                     // 0x0020(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctionLibrary_C_CalcPivotLocation) == 0x000008, "Wrong alignment on AbilityFunctionLibrary_C_CalcPivotLocation");
static_assert(sizeof(AbilityFunctionLibrary_C_CalcPivotLocation) == 0x000070, "Wrong size on AbilityFunctionLibrary_C_CalcPivotLocation");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcPivotLocation, OwnerActor) == 0x000000, "Member 'AbilityFunctionLibrary_C_CalcPivotLocation::OwnerActor' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcPivotLocation, MinPivotForwardDistance) == 0x000008, "Member 'AbilityFunctionLibrary_C_CalcPivotLocation::MinPivotForwardDistance' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcPivotLocation, MaxPivotForwardDistance) == 0x000010, "Member 'AbilityFunctionLibrary_C_CalcPivotLocation::MaxPivotForwardDistance' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcPivotLocation, __WorldContext) == 0x000018, "Member 'AbilityFunctionLibrary_C_CalcPivotLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcPivotLocation, PivotLocation) == 0x000020, "Member 'AbilityFunctionLibrary_C_CalcPivotLocation::PivotLocation' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcPivotLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00002C, "Member 'AbilityFunctionLibrary_C_CalcPivotLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcPivotLocation, CallFunc_RandomFloatInRange_ReturnValue) == 0x000038, "Member 'AbilityFunctionLibrary_C_CalcPivotLocation::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcPivotLocation, CallFunc_GetActorForwardVector_ReturnValue) == 0x000040, "Member 'AbilityFunctionLibrary_C_CalcPivotLocation::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcPivotLocation, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x00004C, "Member 'AbilityFunctionLibrary_C_CalcPivotLocation::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcPivotLocation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000058, "Member 'AbilityFunctionLibrary_C_CalcPivotLocation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcPivotLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000064, "Member 'AbilityFunctionLibrary_C_CalcPivotLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function AbilityFunctionLibrary.AbilityFunctionLibrary_C.CalcSummonsFireStartEndLocation
// 0x0180 (0x0180 - 0x0000)
struct AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation final
{
public:
	class AActor*                                 InOwner;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InTargetLoc;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InFireSocketLoc;                                   // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InAxisSocketLoc;                                   // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InSpreadSize;                                      // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FireLoc;                                           // 0x0038(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndLoc;                                            // 0x0044(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FireLocation;                                      // 0x0050(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndLocation;                                       // 0x005C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TargetAimPitch;                                    // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OwnerRightVector;                                  // 0x0070(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SpreadSize;                                        // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AxisSocketLoc;                                     // 0x0080(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FireSocketLoc;                                     // 0x008C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0098(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UM1MonsterAnimInstance*                 K2Node_DynamicCast_AsM1Monster_Anim_Instance;      // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ApplyRandomSpread_ReturnValue;            // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_TargetAimPitch_ImplicitCast;    // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation) == 0x000008, "Wrong alignment on AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation");
static_assert(sizeof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation) == 0x000180, "Wrong size on AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, InOwner) == 0x000000, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::InOwner' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, InTargetLoc) == 0x000008, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::InTargetLoc' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, InFireSocketLoc) == 0x000014, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::InFireSocketLoc' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, InAxisSocketLoc) == 0x000020, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::InAxisSocketLoc' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, InSpreadSize) == 0x00002C, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::InSpreadSize' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, __WorldContext) == 0x000030, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, FireLoc) == 0x000038, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::FireLoc' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, EndLoc) == 0x000044, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::EndLoc' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, FireLocation) == 0x000050, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::FireLocation' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, EndLocation) == 0x00005C, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::EndLocation' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, TargetAimPitch) == 0x000068, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::TargetAimPitch' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, OwnerRightVector) == 0x000070, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::OwnerRightVector' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, SpreadSize) == 0x00007C, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::SpreadSize' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, AxisSocketLoc) == 0x000080, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::AxisSocketLoc' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, FireSocketLoc) == 0x00008C, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::FireSocketLoc' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, TargetLocation) == 0x000098, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, Owner) == 0x0000A8, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::Owner' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000B0, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, CallFunc_GetComponentByClass_ReturnValue) == 0x0000C0, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, CallFunc_GetRightVector_ReturnValue) == 0x0000C8, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, CallFunc_IsValid_ReturnValue) == 0x0000D4, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, CallFunc_GetAnimInstance_ReturnValue) == 0x0000D8, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, K2Node_DynamicCast_AsM1Monster_Anim_Instance) == 0x0000E0, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::K2Node_DynamicCast_AsM1Monster_Anim_Instance' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, CallFunc_BreakRotator_Roll) == 0x0000EC, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, CallFunc_BreakRotator_Pitch) == 0x0000F0, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, CallFunc_BreakRotator_Yaw) == 0x0000F4, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000F8, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, CallFunc_VSize_ReturnValue) == 0x000108, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, CallFunc_Normal_ReturnValue) == 0x000110, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, CallFunc_ApplyRandomSpread_ReturnValue) == 0x00011C, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::CallFunc_ApplyRandomSpread_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000128, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000134, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000140, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x00014C, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, CallFunc_RotateAngleAxis_ReturnValue) == 0x000158, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000164, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000170, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation, K2Node_VariableSet_TargetAimPitch_ImplicitCast) == 0x000178, "Member 'AbilityFunctionLibrary_C_CalcSummonsFireStartEndLocation::K2Node_VariableSet_TargetAimPitch_ImplicitCast' has a wrong offset!");

// Function AbilityFunctionLibrary.AbilityFunctionLibrary_C.CheckSpawnedCount
// 0x0078 (0x0078 - 0x0000)
struct AbilityFunctionLibrary_C_CheckSpawnedCount final
{
public:
	TArray<class AM1Monster*>                     InSpawnedMonsters;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         MonsterCount;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LimitedSpawnedCount;                               // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanSpawn;                                         // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AM1Monster*>                     SpawnedMonsters;                                   // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AM1Monster*>                     ValidSpawnedMonsters;                              // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AM1Monster*                             CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctionLibrary_C_CheckSpawnedCount) == 0x000008, "Wrong alignment on AbilityFunctionLibrary_C_CheckSpawnedCount");
static_assert(sizeof(AbilityFunctionLibrary_C_CheckSpawnedCount) == 0x000078, "Wrong size on AbilityFunctionLibrary_C_CheckSpawnedCount");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnedCount, InSpawnedMonsters) == 0x000000, "Member 'AbilityFunctionLibrary_C_CheckSpawnedCount::InSpawnedMonsters' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnedCount, MonsterCount) == 0x000010, "Member 'AbilityFunctionLibrary_C_CheckSpawnedCount::MonsterCount' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnedCount, LimitedSpawnedCount) == 0x000014, "Member 'AbilityFunctionLibrary_C_CheckSpawnedCount::LimitedSpawnedCount' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnedCount, __WorldContext) == 0x000018, "Member 'AbilityFunctionLibrary_C_CheckSpawnedCount::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnedCount, bCanSpawn) == 0x000020, "Member 'AbilityFunctionLibrary_C_CheckSpawnedCount::bCanSpawn' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnedCount, SpawnedMonsters) == 0x000028, "Member 'AbilityFunctionLibrary_C_CheckSpawnedCount::SpawnedMonsters' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnedCount, ValidSpawnedMonsters) == 0x000038, "Member 'AbilityFunctionLibrary_C_CheckSpawnedCount::ValidSpawnedMonsters' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnedCount, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'AbilityFunctionLibrary_C_CheckSpawnedCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnedCount, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'AbilityFunctionLibrary_C_CheckSpawnedCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnedCount, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'AbilityFunctionLibrary_C_CheckSpawnedCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnedCount, CallFunc_Array_Get_Item) == 0x000058, "Member 'AbilityFunctionLibrary_C_CheckSpawnedCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnedCount, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'AbilityFunctionLibrary_C_CheckSpawnedCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnedCount, CallFunc_IsDead_ReturnValue) == 0x000061, "Member 'AbilityFunctionLibrary_C_CheckSpawnedCount::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnedCount, CallFunc_Less_IntInt_ReturnValue) == 0x000062, "Member 'AbilityFunctionLibrary_C_CheckSpawnedCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnedCount, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'AbilityFunctionLibrary_C_CheckSpawnedCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnedCount, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'AbilityFunctionLibrary_C_CheckSpawnedCount::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnedCount, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'AbilityFunctionLibrary_C_CheckSpawnedCount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnedCount, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'AbilityFunctionLibrary_C_CheckSpawnedCount::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnedCount, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000074, "Member 'AbilityFunctionLibrary_C_CheckSpawnedCount::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function AbilityFunctionLibrary.AbilityFunctionLibrary_C.CheckSpawnPoint
// 0x01B8 (0x01B8 - 0x0000)
struct AbilityFunctionLibrary_C_CheckSpawnPoint final
{
public:
	struct FVector                                SpawnLocation;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PivotLocation;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinRadius;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLimitedSight;                                     // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AM1Monster*                             OwnerMonster;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InMinRadius;                                       // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0048(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0084(0x009C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_123[0x1];                                      // 0x0123(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AE[0x2];                                      // 0x01AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeVector_Z_ImplicitCast;                // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctionLibrary_C_CheckSpawnPoint) == 0x000008, "Wrong alignment on AbilityFunctionLibrary_C_CheckSpawnPoint");
static_assert(sizeof(AbilityFunctionLibrary_C_CheckSpawnPoint) == 0x0001B8, "Wrong size on AbilityFunctionLibrary_C_CheckSpawnPoint");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, SpawnLocation) == 0x000000, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::SpawnLocation' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, PivotLocation) == 0x00000C, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::PivotLocation' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, MinRadius) == 0x000018, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::MinRadius' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, bLimitedSight) == 0x000020, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::bLimitedSight' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, OwnerMonster) == 0x000028, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::OwnerMonster' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, __WorldContext) == 0x000030, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, Success) == 0x000038, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::Success' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, InMinRadius) == 0x000039, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::InMinRadius' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_Vector_Distance2D_ReturnValue) == 0x000040, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, Temp_object_Variable) == 0x000048, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000058, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x00005C, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_MakeVector_ReturnValue) == 0x00006C, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_LineTraceSingle_OutHit) == 0x000084, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_LineTraceSingle_ReturnValue) == 0x000120, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_BreakHitResult_bBlockingHit) == 0x000121, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_BreakHitResult_bInitialOverlap) == 0x000122, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_BreakHitResult_Time) == 0x000124, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_BreakHitResult_Distance) == 0x000128, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_BreakHitResult_Location) == 0x00012C, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_BreakHitResult_ImpactPoint) == 0x000138, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_BreakHitResult_Normal) == 0x000144, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_BreakHitResult_ImpactNormal) == 0x000150, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_BreakHitResult_PhysMat) == 0x000160, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_BreakHitResult_HitActor) == 0x000168, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_BreakHitResult_HitComponent) == 0x000170, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_BreakHitResult_HitBoneName) == 0x000178, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_BreakHitResult_BoneName) == 0x000180, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_BreakHitResult_HitItem) == 0x000188, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_BreakHitResult_ElementIndex) == 0x00018C, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_BreakHitResult_FaceIndex) == 0x000190, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_BreakHitResult_TraceStart) == 0x000194, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_BreakHitResult_TraceEnd) == 0x0001A0, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_Not_PreBool_ReturnValue) == 0x0001AC, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_BooleanAND_ReturnValue) == 0x0001AD, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CheckSpawnPoint, CallFunc_MakeVector_Z_ImplicitCast) == 0x0001B0, "Member 'AbilityFunctionLibrary_C_CheckSpawnPoint::CallFunc_MakeVector_Z_ImplicitCast' has a wrong offset!");

// Function AbilityFunctionLibrary.AbilityFunctionLibrary_C.CreateAOEActorManager
// 0x0100 (0x0100 - 0x0000)
struct AbilityFunctionLibrary_C_CreateAOEActorManager final
{
public:
	class UObject*                                Outer_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    PrimitiveComp;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EM1RelationsCheckType                         RelationsType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  SEForwardingContextTags;                           // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FGameplayTagContainer                  SEInvokeTags;                                      // 0x0038(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         Period;                                            // 0x0058(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  PeriodOpTags;                                      // 0x0060(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FName                                   PeriodHitFXName;                                   // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStartOverlap;                                     // 0x0088(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNeedEndSE;                                        // 0x0089(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  PeriodSEForwardingContextTags;                     // 0x0090(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FGameplayTagContainer                  PeriodSEInvokeTags;                                // 0x00B0(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x00D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UM1AOECollisionManager_C*               ReturnValue;                                       // 0x00D8(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class UM1AOECollisionManager_C*               CallFunc_SpawnObject_ReturnValue;                  // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1AbilityActor*                        K2Node_DynamicCast_AsM1Ability_Actor;              // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetDoublePropertyByName_Value_ImplicitCast; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctionLibrary_C_CreateAOEActorManager) == 0x000008, "Wrong alignment on AbilityFunctionLibrary_C_CreateAOEActorManager");
static_assert(sizeof(AbilityFunctionLibrary_C_CreateAOEActorManager) == 0x000100, "Wrong size on AbilityFunctionLibrary_C_CreateAOEActorManager");
static_assert(offsetof(AbilityFunctionLibrary_C_CreateAOEActorManager, Outer_0) == 0x000000, "Member 'AbilityFunctionLibrary_C_CreateAOEActorManager::Outer_0' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CreateAOEActorManager, PrimitiveComp) == 0x000008, "Member 'AbilityFunctionLibrary_C_CreateAOEActorManager::PrimitiveComp' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CreateAOEActorManager, RelationsType) == 0x000010, "Member 'AbilityFunctionLibrary_C_CreateAOEActorManager::RelationsType' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CreateAOEActorManager, SEForwardingContextTags) == 0x000018, "Member 'AbilityFunctionLibrary_C_CreateAOEActorManager::SEForwardingContextTags' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CreateAOEActorManager, SEInvokeTags) == 0x000038, "Member 'AbilityFunctionLibrary_C_CreateAOEActorManager::SEInvokeTags' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CreateAOEActorManager, Period) == 0x000058, "Member 'AbilityFunctionLibrary_C_CreateAOEActorManager::Period' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CreateAOEActorManager, PeriodOpTags) == 0x000060, "Member 'AbilityFunctionLibrary_C_CreateAOEActorManager::PeriodOpTags' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CreateAOEActorManager, PeriodHitFXName) == 0x000080, "Member 'AbilityFunctionLibrary_C_CreateAOEActorManager::PeriodHitFXName' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CreateAOEActorManager, bStartOverlap) == 0x000088, "Member 'AbilityFunctionLibrary_C_CreateAOEActorManager::bStartOverlap' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CreateAOEActorManager, bNeedEndSE) == 0x000089, "Member 'AbilityFunctionLibrary_C_CreateAOEActorManager::bNeedEndSE' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CreateAOEActorManager, PeriodSEForwardingContextTags) == 0x000090, "Member 'AbilityFunctionLibrary_C_CreateAOEActorManager::PeriodSEForwardingContextTags' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CreateAOEActorManager, PeriodSEInvokeTags) == 0x0000B0, "Member 'AbilityFunctionLibrary_C_CreateAOEActorManager::PeriodSEInvokeTags' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CreateAOEActorManager, __WorldContext) == 0x0000D0, "Member 'AbilityFunctionLibrary_C_CreateAOEActorManager::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CreateAOEActorManager, ReturnValue) == 0x0000D8, "Member 'AbilityFunctionLibrary_C_CreateAOEActorManager::ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CreateAOEActorManager, CallFunc_SpawnObject_ReturnValue) == 0x0000E0, "Member 'AbilityFunctionLibrary_C_CreateAOEActorManager::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CreateAOEActorManager, K2Node_DynamicCast_AsM1Ability_Actor) == 0x0000E8, "Member 'AbilityFunctionLibrary_C_CreateAOEActorManager::K2Node_DynamicCast_AsM1Ability_Actor' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CreateAOEActorManager, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'AbilityFunctionLibrary_C_CreateAOEActorManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CreateAOEActorManager, CallFunc_IsValid_ReturnValue) == 0x0000F1, "Member 'AbilityFunctionLibrary_C_CreateAOEActorManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_CreateAOEActorManager, CallFunc_SetDoublePropertyByName_Value_ImplicitCast) == 0x0000F8, "Member 'AbilityFunctionLibrary_C_CreateAOEActorManager::CallFunc_SetDoublePropertyByName_Value_ImplicitCast' has a wrong offset!");

// Function AbilityFunctionLibrary.AbilityFunctionLibrary_C.FindRandomTeleportLocationFromSpawnTransformMaker
// 0x0140 (0x0140 - 0x0000)
struct AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker final
{
public:
	class AActor*                                 WorldContext;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   InMakerName;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RandomLocation;                                    // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     CandidateTransforms;                               // 0x0028(0x0010)(Edit, BlueprintVisible)
	class AM1FixedSpawnTransformMaker*            TransformMaker;                                    // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	const class AM1FixedSpawnTransformMaker*      CallFunc_FindSpawnTransformMaker_ReturnValue;      // 0x0040(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      K2Node_DynamicCast_As______;                       // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0080(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Vector_Up_ReturnValue;                    // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Random_OutItem;                     // 0x00B0(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     CallFunc_GetCandidateSpawnWorldTransforms_ReturnValue; // 0x00E8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindGround_OutLocation;                   // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindGround_ReturnValue;                   // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker) == 0x000010, "Wrong alignment on AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker");
static_assert(sizeof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker) == 0x000140, "Wrong size on AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, WorldContext) == 0x000000, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, InMakerName) == 0x000008, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::InMakerName' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, __WorldContext) == 0x000010, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, RandomLocation) == 0x000018, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::RandomLocation' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, CandidateTransforms) == 0x000028, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::CandidateTransforms' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, TransformMaker) == 0x000038, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::TransformMaker' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, CallFunc_FindSpawnTransformMaker_ReturnValue) == 0x000040, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::CallFunc_FindSpawnTransformMaker_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000050, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, K2Node_DynamicCast_As______) == 0x000058, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::K2Node_DynamicCast_As______' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000064, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000070, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000074, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, Temp_object_Variable) == 0x000080, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, CallFunc_Vector_Up_ReturnValue) == 0x000094, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::CallFunc_Vector_Up_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000A0, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, CallFunc_Array_Random_OutItem) == 0x0000B0, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, CallFunc_Array_Random_OutIndex) == 0x0000E0, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, CallFunc_GetCandidateSpawnWorldTransforms_ReturnValue) == 0x0000E8, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::CallFunc_GetCandidateSpawnWorldTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, CallFunc_BreakTransform_Location) == 0x0000F8, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, CallFunc_BreakTransform_Rotation) == 0x000104, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, CallFunc_BreakTransform_Scale) == 0x000110, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, CallFunc_FindGround_OutLocation) == 0x00011C, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::CallFunc_FindGround_OutLocation' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, CallFunc_FindGround_ReturnValue) == 0x000128, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::CallFunc_FindGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, CallFunc_Add_VectorVector_ReturnValue) == 0x00012C, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x000138, "Member 'AbilityFunctionLibrary_C_FindRandomTeleportLocationFromSpawnTransformMaker::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");

// Function AbilityFunctionLibrary.AbilityFunctionLibrary_C.GetAIHomeLocation
// 0x0058 (0x0058 - 0x0000)
struct AbilityFunctionLibrary_C_GetAIHomeLocation final
{
public:
	class UM1Ability*                             Ability;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HomeLocation;                                      // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_As_;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1AIController*                        K2Node_DynamicCast_AsM1AIController;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetHomeLocation_ReturnValue;              // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctionLibrary_C_GetAIHomeLocation) == 0x000008, "Wrong alignment on AbilityFunctionLibrary_C_GetAIHomeLocation");
static_assert(sizeof(AbilityFunctionLibrary_C_GetAIHomeLocation) == 0x000058, "Wrong size on AbilityFunctionLibrary_C_GetAIHomeLocation");
static_assert(offsetof(AbilityFunctionLibrary_C_GetAIHomeLocation, Ability) == 0x000000, "Member 'AbilityFunctionLibrary_C_GetAIHomeLocation::Ability' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_GetAIHomeLocation, __WorldContext) == 0x000008, "Member 'AbilityFunctionLibrary_C_GetAIHomeLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_GetAIHomeLocation, HomeLocation) == 0x000010, "Member 'AbilityFunctionLibrary_C_GetAIHomeLocation::HomeLocation' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_GetAIHomeLocation, CallFunc_GetOwnerActor_ReturnValue) == 0x000020, "Member 'AbilityFunctionLibrary_C_GetAIHomeLocation::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_GetAIHomeLocation, K2Node_DynamicCast_As_) == 0x000028, "Member 'AbilityFunctionLibrary_C_GetAIHomeLocation::K2Node_DynamicCast_As_' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_GetAIHomeLocation, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'AbilityFunctionLibrary_C_GetAIHomeLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_GetAIHomeLocation, CallFunc_GetController_ReturnValue) == 0x000038, "Member 'AbilityFunctionLibrary_C_GetAIHomeLocation::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_GetAIHomeLocation, K2Node_DynamicCast_AsM1AIController) == 0x000040, "Member 'AbilityFunctionLibrary_C_GetAIHomeLocation::K2Node_DynamicCast_AsM1AIController' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_GetAIHomeLocation, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'AbilityFunctionLibrary_C_GetAIHomeLocation::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_GetAIHomeLocation, CallFunc_GetHomeLocation_ReturnValue) == 0x00004C, "Member 'AbilityFunctionLibrary_C_GetAIHomeLocation::CallFunc_GetHomeLocation_ReturnValue' has a wrong offset!");

// Function AbilityFunctionLibrary.AbilityFunctionLibrary_C.GetTransformForAbilityActor
// 0x00B0 (0x00B0 - 0x0000)
struct AbilityFunctionLibrary_C_GetTransformForAbilityActor final
{
public:
	class UM1Ability*                             InAbility;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   InSocketName;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ReturnValue;                                       // 0x0020(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetOwnerSocketTransform_ReturnValue;      // 0x0050(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_RotateToOwnerViewDir_ReturnValue;         // 0x0080(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctionLibrary_C_GetTransformForAbilityActor) == 0x000010, "Wrong alignment on AbilityFunctionLibrary_C_GetTransformForAbilityActor");
static_assert(sizeof(AbilityFunctionLibrary_C_GetTransformForAbilityActor) == 0x0000B0, "Wrong size on AbilityFunctionLibrary_C_GetTransformForAbilityActor");
static_assert(offsetof(AbilityFunctionLibrary_C_GetTransformForAbilityActor, InAbility) == 0x000000, "Member 'AbilityFunctionLibrary_C_GetTransformForAbilityActor::InAbility' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_GetTransformForAbilityActor, InSocketName) == 0x000008, "Member 'AbilityFunctionLibrary_C_GetTransformForAbilityActor::InSocketName' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_GetTransformForAbilityActor, __WorldContext) == 0x000010, "Member 'AbilityFunctionLibrary_C_GetTransformForAbilityActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_GetTransformForAbilityActor, ReturnValue) == 0x000020, "Member 'AbilityFunctionLibrary_C_GetTransformForAbilityActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_GetTransformForAbilityActor, CallFunc_GetOwnerSocketTransform_ReturnValue) == 0x000050, "Member 'AbilityFunctionLibrary_C_GetTransformForAbilityActor::CallFunc_GetOwnerSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_GetTransformForAbilityActor, CallFunc_RotateToOwnerViewDir_ReturnValue) == 0x000080, "Member 'AbilityFunctionLibrary_C_GetTransformForAbilityActor::CallFunc_RotateToOwnerViewDir_ReturnValue' has a wrong offset!");

// Function AbilityFunctionLibrary.AbilityFunctionLibrary_C.InvokeDotDamageStatusEffect
// 0x0118 (0x0118 - 0x0000)
struct AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect final
{
public:
	TScriptInterface<class IM1AbilityBase>        InAbility;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  ForwardingOperationTags;                           // 0x0010(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FGameplayTagContainer                  InTags;                                            // 0x0030(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FM1ScaledInteger                       Damage;                                            // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetActor;                                       // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1ScaledInteger                       CallFunc_FromInt_ReturnValue;                      // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_ScaledIntToFloat_ReturnValue;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ScaledIntScaledInt_ReturnValue;   // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FM1AbilityParamData                    K2Node_MakeStruct_M1AbilityParamData;              // 0x0088(0x0020)()
	TArray<class FName>                           Temp_name_Variable;                                // 0x00A8(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FM1AbilityParamData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	struct FM1TaggedAbilityParamData              K2Node_MakeStruct_M1TaggedAbilityParamData;        // 0x00C8(0x0018)()
	TArray<struct FM1TaggedAbilityParamData>      K2Node_MakeArray_Array_1;                          // 0x00E0(0x0010)(ReferenceParm)
	struct FM1AbilityContextHandle                CallFunc_BP_MakeForwardingContext_ReturnValue;     // 0x00F0(0x0010)()
	struct FM1AbilityId                           CallFunc_InvokeFirstStatusEffectToTargetByTag_ReturnValue; // 0x0100(0x0010)(HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToString_InDouble_ImplicitCast; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect) == 0x000008, "Wrong alignment on AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect");
static_assert(sizeof(AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect) == 0x000118, "Wrong size on AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect");
static_assert(offsetof(AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect, InAbility) == 0x000000, "Member 'AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect::InAbility' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect, ForwardingOperationTags) == 0x000010, "Member 'AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect::ForwardingOperationTags' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect, InTags) == 0x000030, "Member 'AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect::InTags' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect, Damage) == 0x000050, "Member 'AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect::Damage' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect, TargetActor) == 0x000058, "Member 'AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect::TargetActor' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect, __WorldContext) == 0x000060, "Member 'AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect, CallFunc_FromInt_ReturnValue) == 0x000068, "Member 'AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect::CallFunc_FromInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect, CallFunc_Conv_ScaledIntToFloat_ReturnValue) == 0x000070, "Member 'AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect::CallFunc_Conv_ScaledIntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect, CallFunc_Greater_ScaledIntScaledInt_ReturnValue) == 0x000074, "Member 'AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect::CallFunc_Greater_ScaledIntScaledInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000078, "Member 'AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect, K2Node_MakeStruct_M1AbilityParamData) == 0x000088, "Member 'AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect::K2Node_MakeStruct_M1AbilityParamData' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect, Temp_name_Variable) == 0x0000A8, "Member 'AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect, K2Node_MakeArray_Array) == 0x0000B8, "Member 'AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect, K2Node_MakeStruct_M1TaggedAbilityParamData) == 0x0000C8, "Member 'AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect::K2Node_MakeStruct_M1TaggedAbilityParamData' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect, K2Node_MakeArray_Array_1) == 0x0000E0, "Member 'AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect, CallFunc_BP_MakeForwardingContext_ReturnValue) == 0x0000F0, "Member 'AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect::CallFunc_BP_MakeForwardingContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect, CallFunc_InvokeFirstStatusEffectToTargetByTag_ReturnValue) == 0x000100, "Member 'AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect::CallFunc_InvokeFirstStatusEffectToTargetByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect, CallFunc_Conv_DoubleToString_InDouble_ImplicitCast) == 0x000110, "Member 'AbilityFunctionLibrary_C_InvokeDotDamageStatusEffect::CallFunc_Conv_DoubleToString_InDouble_ImplicitCast' has a wrong offset!");

// Function AbilityFunctionLibrary.AbilityFunctionLibrary_C.MakeDecalParams
// 0x00F8 (0x00F8 - 0x0000)
struct AbilityFunctionLibrary_C_MakeDecalParams final
{
public:
	double                                        Duration;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Size;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Height;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseScaledSize;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FM1FXScalarParam>               ReturnParams;                                      // 0x0028(0x0010)(Parm, OutParm)
	TArray<struct FM1FXScalarParam>               DecalParams;                                       // 0x0038(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1FXScalarParam                       K2Node_MakeStruct_M1FXScalarParam;                 // 0x004C(0x000C)(NoDestructor)
	struct FM1FXScalarParam                       K2Node_MakeStruct_M1FXScalarParam_1;               // 0x0058(0x000C)(NoDestructor)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1FXScalarParam                       K2Node_MakeStruct_M1FXScalarParam_2;               // 0x0068(0x000C)(NoDestructor)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1FXScalarParam                       K2Node_MakeStruct_M1FXScalarParam_3;               // 0x0078(0x000C)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IM1AbilityBase>        K2Node_DynamicCast_AsM1Ability_Base;               // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAOEScaleMultiplier_ReturnValue;        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FM1FXScalarParam                       K2Node_MakeStruct_M1FXScalarParam_4;               // 0x00A8(0x000C)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FM1FXScalarParam                       K2Node_MakeStruct_M1FXScalarParam_5;               // 0x00BC(0x000C)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_ParamValue_ImplicitCast;         // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_ParamValue_ImplicitCast_1;       // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_ParamValue_ImplicitCast_2;       // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_ParamValue_ImplicitCast_3;       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_ParamValue_ImplicitCast_4;       // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_ParamValue_ImplicitCast_5;       // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctionLibrary_C_MakeDecalParams) == 0x000008, "Wrong alignment on AbilityFunctionLibrary_C_MakeDecalParams");
static_assert(sizeof(AbilityFunctionLibrary_C_MakeDecalParams) == 0x0000F8, "Wrong size on AbilityFunctionLibrary_C_MakeDecalParams");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, Duration) == 0x000000, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::Duration' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, Size) == 0x000008, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::Size' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, Height) == 0x000010, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::Height' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, UseScaledSize) == 0x000018, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::UseScaledSize' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, __WorldContext) == 0x000020, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, ReturnParams) == 0x000028, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::ReturnParams' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, DecalParams) == 0x000038, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::DecalParams' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, K2Node_MakeStruct_M1FXScalarParam) == 0x00004C, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::K2Node_MakeStruct_M1FXScalarParam' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, K2Node_MakeStruct_M1FXScalarParam_1) == 0x000058, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::K2Node_MakeStruct_M1FXScalarParam_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000064, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, K2Node_MakeStruct_M1FXScalarParam_2) == 0x000068, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::K2Node_MakeStruct_M1FXScalarParam_2' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000074, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, K2Node_MakeStruct_M1FXScalarParam_3) == 0x000078, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::K2Node_MakeStruct_M1FXScalarParam_3' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, CallFunc_Array_Add_ReturnValue) == 0x000084, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, K2Node_DynamicCast_AsM1Ability_Base) == 0x000088, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::K2Node_DynamicCast_AsM1Ability_Base' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, CallFunc_GetAOEScaleMultiplier_ReturnValue) == 0x00009C, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::CallFunc_GetAOEScaleMultiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, K2Node_MakeStruct_M1FXScalarParam_4) == 0x0000A8, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::K2Node_MakeStruct_M1FXScalarParam_4' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, CallFunc_Array_Add_ReturnValue_1) == 0x0000B4, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, CallFunc_Array_Add_ReturnValue_2) == 0x0000B8, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, K2Node_MakeStruct_M1FXScalarParam_5) == 0x0000BC, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::K2Node_MakeStruct_M1FXScalarParam_5' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, CallFunc_Array_Add_ReturnValue_3) == 0x0000C8, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, CallFunc_Array_Add_ReturnValue_4) == 0x0000CC, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, CallFunc_Array_Add_ReturnValue_5) == 0x0000D0, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, K2Node_MakeStruct_ParamValue_ImplicitCast) == 0x0000D4, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::K2Node_MakeStruct_ParamValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, K2Node_MakeStruct_ParamValue_ImplicitCast_1) == 0x0000D8, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::K2Node_MakeStruct_ParamValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, K2Node_MakeStruct_ParamValue_ImplicitCast_2) == 0x0000DC, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::K2Node_MakeStruct_ParamValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, K2Node_MakeStruct_ParamValue_ImplicitCast_3) == 0x0000E0, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::K2Node_MakeStruct_ParamValue_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x0000E8, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, K2Node_MakeStruct_ParamValue_ImplicitCast_4) == 0x0000F0, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::K2Node_MakeStruct_ParamValue_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeDecalParams, K2Node_MakeStruct_ParamValue_ImplicitCast_5) == 0x0000F4, "Member 'AbilityFunctionLibrary_C_MakeDecalParams::K2Node_MakeStruct_ParamValue_ImplicitCast_5' has a wrong offset!");

// Function AbilityFunctionLibrary.AbilityFunctionLibrary_C.MakeMaxHpAbilityParam
// 0x0060 (0x0060 - 0x0000)
struct AbilityFunctionLibrary_C_MakeMaxHpAbilityParam final
{
public:
	double                                        MaxHPRatio;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityParamData                    Result;                                            // 0x0010(0x0020)(Parm, OutParm)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FM1AbilityParamData                    K2Node_MakeStruct_M1AbilityParamData;              // 0x0040(0x0020)()
};
static_assert(alignof(AbilityFunctionLibrary_C_MakeMaxHpAbilityParam) == 0x000008, "Wrong alignment on AbilityFunctionLibrary_C_MakeMaxHpAbilityParam");
static_assert(sizeof(AbilityFunctionLibrary_C_MakeMaxHpAbilityParam) == 0x000060, "Wrong size on AbilityFunctionLibrary_C_MakeMaxHpAbilityParam");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeMaxHpAbilityParam, MaxHPRatio) == 0x000000, "Member 'AbilityFunctionLibrary_C_MakeMaxHpAbilityParam::MaxHPRatio' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeMaxHpAbilityParam, __WorldContext) == 0x000008, "Member 'AbilityFunctionLibrary_C_MakeMaxHpAbilityParam::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeMaxHpAbilityParam, Result) == 0x000010, "Member 'AbilityFunctionLibrary_C_MakeMaxHpAbilityParam::Result' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeMaxHpAbilityParam, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000030, "Member 'AbilityFunctionLibrary_C_MakeMaxHpAbilityParam::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeMaxHpAbilityParam, K2Node_MakeStruct_M1AbilityParamData) == 0x000040, "Member 'AbilityFunctionLibrary_C_MakeMaxHpAbilityParam::K2Node_MakeStruct_M1AbilityParamData' has a wrong offset!");

// Function AbilityFunctionLibrary.AbilityFunctionLibrary_C.MakeMaxHpOperationParam
// 0x01A0 (0x01A0 - 0x0000)
struct AbilityFunctionLibrary_C_MakeMaxHpOperationParam final
{
public:
	double                                        MaxHPRatio;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityOperationParam               Result;                                            // 0x0010(0x00B0)(Parm, OutParm, ContainsInstancedReference)
	struct FM1AbilityParamData                    CallFunc_MakeMaxHpAbilityParam_Result;             // 0x00C0(0x0020)()
	TArray<struct FM1AbilityParamData>            K2Node_MakeArray_Array;                            // 0x00E0(0x0010)(ReferenceParm)
	struct FM1AbilityOperationParam               K2Node_MakeStruct_M1AbilityOperationParam;         // 0x00F0(0x00B0)(ContainsInstancedReference)
};
static_assert(alignof(AbilityFunctionLibrary_C_MakeMaxHpOperationParam) == 0x000008, "Wrong alignment on AbilityFunctionLibrary_C_MakeMaxHpOperationParam");
static_assert(sizeof(AbilityFunctionLibrary_C_MakeMaxHpOperationParam) == 0x0001A0, "Wrong size on AbilityFunctionLibrary_C_MakeMaxHpOperationParam");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeMaxHpOperationParam, MaxHPRatio) == 0x000000, "Member 'AbilityFunctionLibrary_C_MakeMaxHpOperationParam::MaxHPRatio' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeMaxHpOperationParam, __WorldContext) == 0x000008, "Member 'AbilityFunctionLibrary_C_MakeMaxHpOperationParam::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeMaxHpOperationParam, Result) == 0x000010, "Member 'AbilityFunctionLibrary_C_MakeMaxHpOperationParam::Result' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeMaxHpOperationParam, CallFunc_MakeMaxHpAbilityParam_Result) == 0x0000C0, "Member 'AbilityFunctionLibrary_C_MakeMaxHpOperationParam::CallFunc_MakeMaxHpAbilityParam_Result' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeMaxHpOperationParam, K2Node_MakeArray_Array) == 0x0000E0, "Member 'AbilityFunctionLibrary_C_MakeMaxHpOperationParam::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_MakeMaxHpOperationParam, K2Node_MakeStruct_M1AbilityOperationParam) == 0x0000F0, "Member 'AbilityFunctionLibrary_C_MakeMaxHpOperationParam::K2Node_MakeStruct_M1AbilityOperationParam' has a wrong offset!");

// Function AbilityFunctionLibrary.AbilityFunctionLibrary_C.SpawnManyOneKindMonster
// 0x0170 (0x0170 - 0x0000)
struct AbilityFunctionLibrary_C_SpawnManyOneKindMonster final
{
public:
	class FName                                   SpawnMonsterName;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SpawnCount;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 OwnerActor;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        MinPivotForwardDistance;                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxPivotForwardDistance;                           // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                WorldContext;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SpawnCheckLoopCount;                               // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxRadius;                                         // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinRaduis;                                         // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLimitedSight;                                     // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bArcheShieldNeeded;                                // 0x0049(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bSucceed;                                          // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AM1Monster*>                     OutSpawnedMonsters;                                // 0x0060(0x0010)(Parm, OutParm)
	class FName                                   ArcheShieldSERowName;                              // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AM1Monster*                             SpawnedMonster;                                    // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class AM1Monster*>                     SpawnedMonsters;                                   // 0x0080(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AM1Monster*                             OwnerMonster;                                      // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnLocation;                                     // 0x0098(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PivotLocation;                                     // 0x00A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1StatusEffectComponent*               CallFunc_GetStatusEffectComponent_ReturnValue;     // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityId                           CallFunc_Auth_StartStatusEffectFromDataRow_ReturnValue; // 0x00C0(0x0010)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetLevelParam_ReturnValue;                // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E8[0x8];                                       // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00F0(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AM1Monster*                             CallFunc_SummonMonster_SpawnedMonster;             // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AM1Monster*                             K2Node_DynamicCast_AsM1Monster;                    // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSpawnPoint_Success;                  // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x2];                                      // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalcRandomSpawnPointFromOrigin_RandomLocation; // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalcRandomSpawnPointFromOrigin_bSuccess;  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalcPivotLocation_PivotLocation;          // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster) == 0x000010, "Wrong alignment on AbilityFunctionLibrary_C_SpawnManyOneKindMonster");
static_assert(sizeof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster) == 0x000170, "Wrong size on AbilityFunctionLibrary_C_SpawnManyOneKindMonster");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, SpawnMonsterName) == 0x000000, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::SpawnMonsterName' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, SpawnCount) == 0x000008, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::SpawnCount' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, OwnerActor) == 0x000010, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::OwnerActor' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, MinPivotForwardDistance) == 0x000018, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::MinPivotForwardDistance' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, MaxPivotForwardDistance) == 0x000020, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::MaxPivotForwardDistance' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, WorldContext) == 0x000028, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, SpawnCheckLoopCount) == 0x000030, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::SpawnCheckLoopCount' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, MaxRadius) == 0x000038, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::MaxRadius' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, MinRaduis) == 0x000040, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::MinRaduis' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, bLimitedSight) == 0x000048, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::bLimitedSight' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, bArcheShieldNeeded) == 0x000049, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::bArcheShieldNeeded' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, __WorldContext) == 0x000050, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, bSucceed) == 0x000058, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::bSucceed' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, OutSpawnedMonsters) == 0x000060, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::OutSpawnedMonsters' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, ArcheShieldSERowName) == 0x000070, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::ArcheShieldSERowName' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, SpawnedMonster) == 0x000078, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::SpawnedMonster' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, SpawnedMonsters) == 0x000080, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::SpawnedMonsters' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, OwnerMonster) == 0x000090, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::OwnerMonster' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, SpawnLocation) == 0x000098, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::SpawnLocation' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, PivotLocation) == 0x0000A4, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::PivotLocation' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000B0, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, CallFunc_BooleanAND_ReturnValue) == 0x0000B1, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, CallFunc_GetStatusEffectComponent_ReturnValue) == 0x0000B8, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::CallFunc_GetStatusEffectComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, CallFunc_Auth_StartStatusEffectFromDataRow_ReturnValue) == 0x0000C0, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::CallFunc_Auth_StartStatusEffectFromDataRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, Temp_int_Variable) == 0x0000D0, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0000D4, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000D8, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, CallFunc_GetLevelParam_ReturnValue) == 0x0000E4, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::CallFunc_GetLevelParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, CallFunc_MakeTransform_ReturnValue) == 0x0000F0, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, Temp_int_Variable_1) == 0x000120, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, CallFunc_SummonMonster_SpawnedMonster) == 0x000128, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::CallFunc_SummonMonster_SpawnedMonster' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, CallFunc_Subtract_IntInt_ReturnValue) == 0x000130, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000134, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, K2Node_DynamicCast_AsM1Monster) == 0x000138, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::K2Node_DynamicCast_AsM1Monster' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, CallFunc_CheckSpawnPoint_Success) == 0x000141, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::CallFunc_CheckSpawnPoint_Success' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, CallFunc_CalcRandomSpawnPointFromOrigin_RandomLocation) == 0x000144, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::CallFunc_CalcRandomSpawnPointFromOrigin_RandomLocation' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, CallFunc_CalcRandomSpawnPointFromOrigin_bSuccess) == 0x000150, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::CallFunc_CalcRandomSpawnPointFromOrigin_bSuccess' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, CallFunc_Greater_IntInt_ReturnValue) == 0x000151, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, CallFunc_BooleanAND_ReturnValue_1) == 0x000152, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000153, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, CallFunc_Array_Add_ReturnValue) == 0x000154, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, CallFunc_BooleanAND_ReturnValue_2) == 0x000158, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SpawnManyOneKindMonster, CallFunc_CalcPivotLocation_PivotLocation) == 0x00015C, "Member 'AbilityFunctionLibrary_C_SpawnManyOneKindMonster::CallFunc_CalcPivotLocation_PivotLocation' has a wrong offset!");

// Function AbilityFunctionLibrary.AbilityFunctionLibrary_C.SummonMonster
// 0x00C0 (0x00C0 - 0x0000)
struct AbilityFunctionLibrary_C_SummonMonster final
{
public:
	class AM1Monster*                             Master;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   MonsterRowName;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0xC];                                       // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TargetTransform;                                   // 0x0020(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Monster*                             SpawnedMonster;                                    // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UM1ActorManagerSubsystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* ConstructingActor)> Temp_delegate_Variable;                            // 0x008C(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AM1Character*                           CallFunc_SpawnCharacter_ReturnValue;               // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Monster*                             K2Node_DynamicCast_AsM1Monster;                    // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctionLibrary_C_SummonMonster) == 0x000010, "Wrong alignment on AbilityFunctionLibrary_C_SummonMonster");
static_assert(sizeof(AbilityFunctionLibrary_C_SummonMonster) == 0x0000C0, "Wrong size on AbilityFunctionLibrary_C_SummonMonster");
static_assert(offsetof(AbilityFunctionLibrary_C_SummonMonster, Master) == 0x000000, "Member 'AbilityFunctionLibrary_C_SummonMonster::Master' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SummonMonster, MonsterRowName) == 0x000008, "Member 'AbilityFunctionLibrary_C_SummonMonster::MonsterRowName' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SummonMonster, Level) == 0x000010, "Member 'AbilityFunctionLibrary_C_SummonMonster::Level' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SummonMonster, TargetTransform) == 0x000020, "Member 'AbilityFunctionLibrary_C_SummonMonster::TargetTransform' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SummonMonster, __WorldContext) == 0x000050, "Member 'AbilityFunctionLibrary_C_SummonMonster::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SummonMonster, SpawnedMonster) == 0x000058, "Member 'AbilityFunctionLibrary_C_SummonMonster::SpawnedMonster' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SummonMonster, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000060, "Member 'AbilityFunctionLibrary_C_SummonMonster::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SummonMonster, CallFunc_BreakTransform_Location) == 0x000068, "Member 'AbilityFunctionLibrary_C_SummonMonster::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SummonMonster, CallFunc_BreakTransform_Rotation) == 0x000074, "Member 'AbilityFunctionLibrary_C_SummonMonster::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SummonMonster, CallFunc_BreakTransform_Scale) == 0x000080, "Member 'AbilityFunctionLibrary_C_SummonMonster::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SummonMonster, Temp_delegate_Variable) == 0x00008C, "Member 'AbilityFunctionLibrary_C_SummonMonster::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SummonMonster, CallFunc_SpawnCharacter_ReturnValue) == 0x0000A0, "Member 'AbilityFunctionLibrary_C_SummonMonster::CallFunc_SpawnCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SummonMonster, K2Node_DynamicCast_AsM1Monster) == 0x0000A8, "Member 'AbilityFunctionLibrary_C_SummonMonster::K2Node_DynamicCast_AsM1Monster' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_SummonMonster, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'AbilityFunctionLibrary_C_SummonMonster::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function AbilityFunctionLibrary.AbilityFunctionLibrary_C.TryLoadAnimSequence
// 0x0090 (0x0090 - 0x0000)
struct AbilityFunctionLibrary_C_TryLoadAnimSequence final
{
public:
	class FName                                   AssetPath;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          AnimSequence;                                      // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue;           // 0x0028(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue; // 0x0048(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          K2Node_DynamicCast_As______;                       // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AbilityFunctionLibrary_C_TryLoadAnimSequence) == 0x000008, "Wrong alignment on AbilityFunctionLibrary_C_TryLoadAnimSequence");
static_assert(sizeof(AbilityFunctionLibrary_C_TryLoadAnimSequence) == 0x000090, "Wrong size on AbilityFunctionLibrary_C_TryLoadAnimSequence");
static_assert(offsetof(AbilityFunctionLibrary_C_TryLoadAnimSequence, AssetPath) == 0x000000, "Member 'AbilityFunctionLibrary_C_TryLoadAnimSequence::AssetPath' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_TryLoadAnimSequence, __WorldContext) == 0x000008, "Member 'AbilityFunctionLibrary_C_TryLoadAnimSequence::__WorldContext' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_TryLoadAnimSequence, AnimSequence) == 0x000010, "Member 'AbilityFunctionLibrary_C_TryLoadAnimSequence::AnimSequence' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_TryLoadAnimSequence, CallFunc_Conv_NameToString_ReturnValue) == 0x000018, "Member 'AbilityFunctionLibrary_C_TryLoadAnimSequence::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_TryLoadAnimSequence, CallFunc_MakeSoftObjectPath_ReturnValue) == 0x000028, "Member 'AbilityFunctionLibrary_C_TryLoadAnimSequence::CallFunc_MakeSoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_TryLoadAnimSequence, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue) == 0x000048, "Member 'AbilityFunctionLibrary_C_TryLoadAnimSequence::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_TryLoadAnimSequence, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000078, "Member 'AbilityFunctionLibrary_C_TryLoadAnimSequence::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_TryLoadAnimSequence, K2Node_DynamicCast_As______) == 0x000080, "Member 'AbilityFunctionLibrary_C_TryLoadAnimSequence::K2Node_DynamicCast_As______' has a wrong offset!");
static_assert(offsetof(AbilityFunctionLibrary_C_TryLoadAnimSequence, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'AbilityFunctionLibrary_C_TryLoadAnimSequence::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

