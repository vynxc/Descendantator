#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: M1AnimCluster

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct M1AnimCluster.M1AnimSharingSample
// 0x0018 (0x0018 - 0x0000)
struct FM1AnimSharingSample final
{
public:
	class UAnimationAsset*                        AnimToPlay;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLooping;                                          // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BlendTime;                                         // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UM1AnimSharingMetricBase*               Metric;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FM1AnimSharingSample) == 0x000008, "Wrong alignment on FM1AnimSharingSample");
static_assert(sizeof(FM1AnimSharingSample) == 0x000018, "Wrong size on FM1AnimSharingSample");
static_assert(offsetof(FM1AnimSharingSample, AnimToPlay) == 0x000000, "Member 'FM1AnimSharingSample::AnimToPlay' has a wrong offset!");
static_assert(offsetof(FM1AnimSharingSample, bLooping) == 0x000008, "Member 'FM1AnimSharingSample::bLooping' has a wrong offset!");
static_assert(offsetof(FM1AnimSharingSample, BlendTime) == 0x00000C, "Member 'FM1AnimSharingSample::BlendTime' has a wrong offset!");
static_assert(offsetof(FM1AnimSharingSample, Metric) == 0x000010, "Member 'FM1AnimSharingSample::Metric' has a wrong offset!");

// ScriptStruct M1AnimCluster.M1AnimSharingPreset
// 0x0010 (0x0010 - 0x0000)
struct FM1AnimSharingPreset final
{
public:
	TArray<struct FM1AnimSharingSample>           Samples;                                           // 0x0000(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FM1AnimSharingPreset) == 0x000008, "Wrong alignment on FM1AnimSharingPreset");
static_assert(sizeof(FM1AnimSharingPreset) == 0x000010, "Wrong size on FM1AnimSharingPreset");
static_assert(offsetof(FM1AnimSharingPreset, Samples) == 0x000000, "Member 'FM1AnimSharingPreset::Samples' has a wrong offset!");

}

