#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Default_Fist

#include "Basic.hpp"

#include "M1Data_structs.hpp"
#include "SubSkillSetting_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SubSkillCollision_structs.hpp"
#include "Engine_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "M1_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function Default_Fist.Default_Fist_C.ServerDamageToEnemy
// 0x0010 (0x0010 - 0x0000)
struct Default_Fist_C_ServerDamageToEnemy final
{
public:
	TArray<class AActor*>                         InEnemies;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Default_Fist_C_ServerDamageToEnemy) == 0x000008, "Wrong alignment on Default_Fist_C_ServerDamageToEnemy");
static_assert(sizeof(Default_Fist_C_ServerDamageToEnemy) == 0x000010, "Wrong size on Default_Fist_C_ServerDamageToEnemy");
static_assert(offsetof(Default_Fist_C_ServerDamageToEnemy, InEnemies) == 0x000000, "Member 'Default_Fist_C_ServerDamageToEnemy::InEnemies' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.SendRuneEvent
// 0x0148 (0x0148 - 0x0000)
struct Default_Fist_C_SendRuneEvent final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Character*                           K2Node_DynamicCast_AsM1Character;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        K2Node_MakeStruct_M1AbilityEvent;                  // 0x0028(0x0040)()
	struct FM1AbilityEvent                        K2Node_MakeStruct_M1AbilityEvent_1;                // 0x0068(0x0040)()
	struct FM1AbilityEvent                        K2Node_MakeStruct_M1AbilityEvent_2;                // 0x00A8(0x0040)()
	struct FM1AbilityEvent                        K2Node_MakeStruct_M1AbilityEvent_3;                // 0x00E8(0x0040)()
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue_1;                     // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_2;              // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_3;              // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Default_Fist_C_SendRuneEvent) == 0x000008, "Wrong alignment on Default_Fist_C_SendRuneEvent");
static_assert(sizeof(Default_Fist_C_SendRuneEvent) == 0x000148, "Wrong size on Default_Fist_C_SendRuneEvent");
static_assert(offsetof(Default_Fist_C_SendRuneEvent, Object) == 0x000000, "Member 'Default_Fist_C_SendRuneEvent::Object' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_SendRuneEvent, CallFunc_GetOwnerActor_ReturnValue) == 0x000008, "Member 'Default_Fist_C_SendRuneEvent::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_SendRuneEvent, K2Node_DynamicCast_AsM1Character) == 0x000010, "Member 'Default_Fist_C_SendRuneEvent::K2Node_DynamicCast_AsM1Character' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_SendRuneEvent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Default_Fist_C_SendRuneEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_SendRuneEvent, CallFunc_GetOwnerActor_ReturnValue_1) == 0x000020, "Member 'Default_Fist_C_SendRuneEvent::CallFunc_GetOwnerActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_SendRuneEvent, K2Node_MakeStruct_M1AbilityEvent) == 0x000028, "Member 'Default_Fist_C_SendRuneEvent::K2Node_MakeStruct_M1AbilityEvent' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_SendRuneEvent, K2Node_MakeStruct_M1AbilityEvent_1) == 0x000068, "Member 'Default_Fist_C_SendRuneEvent::K2Node_MakeStruct_M1AbilityEvent_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_SendRuneEvent, K2Node_MakeStruct_M1AbilityEvent_2) == 0x0000A8, "Member 'Default_Fist_C_SendRuneEvent::K2Node_MakeStruct_M1AbilityEvent_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_SendRuneEvent, K2Node_MakeStruct_M1AbilityEvent_3) == 0x0000E8, "Member 'Default_Fist_C_SendRuneEvent::K2Node_MakeStruct_M1AbilityEvent_3' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_SendRuneEvent, CallFunc_IsDead_ReturnValue) == 0x000128, "Member 'Default_Fist_C_SendRuneEvent::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_SendRuneEvent, CallFunc_IsDead_ReturnValue_1) == 0x000129, "Member 'Default_Fist_C_SendRuneEvent::CallFunc_IsDead_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_SendRuneEvent, CallFunc_GetOwnerActor_ReturnValue_2) == 0x000130, "Member 'Default_Fist_C_SendRuneEvent::CallFunc_GetOwnerActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_SendRuneEvent, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000138, "Member 'Default_Fist_C_SendRuneEvent::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_SendRuneEvent, CallFunc_GetOwnerActor_ReturnValue_3) == 0x000140, "Member 'Default_Fist_C_SendRuneEvent::CallFunc_GetOwnerActor_ReturnValue_3' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.SendPrevRuneEvent
// 0x0098 (0x0098 - 0x0000)
struct Default_Fist_C_SendPrevRuneEvent final
{
public:
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        K2Node_MakeStruct_M1AbilityEvent;                  // 0x0008(0x0040)()
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_1;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        K2Node_MakeStruct_M1AbilityEvent_1;                // 0x0058(0x0040)()
};
static_assert(alignof(Default_Fist_C_SendPrevRuneEvent) == 0x000008, "Wrong alignment on Default_Fist_C_SendPrevRuneEvent");
static_assert(sizeof(Default_Fist_C_SendPrevRuneEvent) == 0x000098, "Wrong size on Default_Fist_C_SendPrevRuneEvent");
static_assert(offsetof(Default_Fist_C_SendPrevRuneEvent, CallFunc_GetOwnerActor_ReturnValue) == 0x000000, "Member 'Default_Fist_C_SendPrevRuneEvent::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_SendPrevRuneEvent, K2Node_MakeStruct_M1AbilityEvent) == 0x000008, "Member 'Default_Fist_C_SendPrevRuneEvent::K2Node_MakeStruct_M1AbilityEvent' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_SendPrevRuneEvent, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x000048, "Member 'Default_Fist_C_SendPrevRuneEvent::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_SendPrevRuneEvent, CallFunc_GetOwnerActor_ReturnValue_1) == 0x000050, "Member 'Default_Fist_C_SendPrevRuneEvent::CallFunc_GetOwnerActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_SendPrevRuneEvent, K2Node_MakeStruct_M1AbilityEvent_1) == 0x000058, "Member 'Default_Fist_C_SendPrevRuneEvent::K2Node_MakeStruct_M1AbilityEvent_1' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.RotateToAttackDirectionIfNeed
// 0x0018 (0x0018 - 0x0000)
struct Default_Fist_C_RotateToAttackDirectionIfNeed final
{
public:
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Vector_IsNearlyZero_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Default_Fist_C_RotateToAttackDirectionIfNeed) == 0x000008, "Wrong alignment on Default_Fist_C_RotateToAttackDirectionIfNeed");
static_assert(sizeof(Default_Fist_C_RotateToAttackDirectionIfNeed) == 0x000018, "Wrong size on Default_Fist_C_RotateToAttackDirectionIfNeed");
static_assert(offsetof(Default_Fist_C_RotateToAttackDirectionIfNeed, CallFunc_GetOwnerActor_ReturnValue) == 0x000000, "Member 'Default_Fist_C_RotateToAttackDirectionIfNeed::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_RotateToAttackDirectionIfNeed, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000008, "Member 'Default_Fist_C_RotateToAttackDirectionIfNeed::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_RotateToAttackDirectionIfNeed, CallFunc_Vector_IsNearlyZero_ReturnValue) == 0x000014, "Member 'Default_Fist_C_RotateToAttackDirectionIfNeed::CallFunc_Vector_IsNearlyZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_RotateToAttackDirectionIfNeed, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000015, "Member 'Default_Fist_C_RotateToAttackDirectionIfNeed::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.OnUpdate_1C9BEB0A42DB15447A2DAA9BAFDF1BEE
// 0x0004 (0x0004 - 0x0000)
struct Default_Fist_C_OnUpdate_1C9BEB0A42DB15447A2DAA9BAFDF1BEE final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Default_Fist_C_OnUpdate_1C9BEB0A42DB15447A2DAA9BAFDF1BEE) == 0x000004, "Wrong alignment on Default_Fist_C_OnUpdate_1C9BEB0A42DB15447A2DAA9BAFDF1BEE");
static_assert(sizeof(Default_Fist_C_OnUpdate_1C9BEB0A42DB15447A2DAA9BAFDF1BEE) == 0x000004, "Wrong size on Default_Fist_C_OnUpdate_1C9BEB0A42DB15447A2DAA9BAFDF1BEE");
static_assert(offsetof(Default_Fist_C_OnUpdate_1C9BEB0A42DB15447A2DAA9BAFDF1BEE, DeltaTime) == 0x000000, "Member 'Default_Fist_C_OnUpdate_1C9BEB0A42DB15447A2DAA9BAFDF1BEE::DeltaTime' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.OnRep_bIsLanded
// 0x0018 (0x0018 - 0x0000)
struct Default_Fist_C_OnRep_bIsLanded final
{
public:
	class UAnimMontage*                           CallFunc_GetAnimMontage_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Default_Fist_C_OnRep_bIsLanded) == 0x000008, "Wrong alignment on Default_Fist_C_OnRep_bIsLanded");
static_assert(sizeof(Default_Fist_C_OnRep_bIsLanded) == 0x000018, "Wrong size on Default_Fist_C_OnRep_bIsLanded");
static_assert(offsetof(Default_Fist_C_OnRep_bIsLanded, CallFunc_GetAnimMontage_ReturnValue) == 0x000000, "Member 'Default_Fist_C_OnRep_bIsLanded::CallFunc_GetAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_OnRep_bIsLanded, CallFunc_GetOwnerActor_ReturnValue) == 0x000008, "Member 'Default_Fist_C_OnRep_bIsLanded::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_OnRep_bIsLanded, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Default_Fist_C_OnRep_bIsLanded::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.OnFinished_FA896AD34AED6B31532A3BB7F0DD5EC9
// 0x0010 (0x0010 - 0x0000)
struct Default_Fist_C_OnFinished_FA896AD34AED6B31532A3BB7F0DD5EC9 final
{
public:
	bool                                          DestinationReached;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TimedOut;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FinalTargetLocation;                               // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Default_Fist_C_OnFinished_FA896AD34AED6B31532A3BB7F0DD5EC9) == 0x000004, "Wrong alignment on Default_Fist_C_OnFinished_FA896AD34AED6B31532A3BB7F0DD5EC9");
static_assert(sizeof(Default_Fist_C_OnFinished_FA896AD34AED6B31532A3BB7F0DD5EC9) == 0x000010, "Wrong size on Default_Fist_C_OnFinished_FA896AD34AED6B31532A3BB7F0DD5EC9");
static_assert(offsetof(Default_Fist_C_OnFinished_FA896AD34AED6B31532A3BB7F0DD5EC9, DestinationReached) == 0x000000, "Member 'Default_Fist_C_OnFinished_FA896AD34AED6B31532A3BB7F0DD5EC9::DestinationReached' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_OnFinished_FA896AD34AED6B31532A3BB7F0DD5EC9, TimedOut) == 0x000001, "Member 'Default_Fist_C_OnFinished_FA896AD34AED6B31532A3BB7F0DD5EC9::TimedOut' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_OnFinished_FA896AD34AED6B31532A3BB7F0DD5EC9, FinalTargetLocation) == 0x000004, "Member 'Default_Fist_C_OnFinished_FA896AD34AED6B31532A3BB7F0DD5EC9::FinalTargetLocation' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.OnEventReceived_D54F2B39422DA08EA130338C89FA1FCE
// 0x0040 (0x0040 - 0x0000)
struct Default_Fist_C_OnEventReceived_D54F2B39422DA08EA130338C89FA1FCE final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Default_Fist_C_OnEventReceived_D54F2B39422DA08EA130338C89FA1FCE) == 0x000008, "Wrong alignment on Default_Fist_C_OnEventReceived_D54F2B39422DA08EA130338C89FA1FCE");
static_assert(sizeof(Default_Fist_C_OnEventReceived_D54F2B39422DA08EA130338C89FA1FCE) == 0x000040, "Wrong size on Default_Fist_C_OnEventReceived_D54F2B39422DA08EA130338C89FA1FCE");
static_assert(offsetof(Default_Fist_C_OnEventReceived_D54F2B39422DA08EA130338C89FA1FCE, Event) == 0x000000, "Member 'Default_Fist_C_OnEventReceived_D54F2B39422DA08EA130338C89FA1FCE::Event' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.OnEventReceived_5E573E1E46AA8A55B901328E15DB16D6
// 0x0040 (0x0040 - 0x0000)
struct Default_Fist_C_OnEventReceived_5E573E1E46AA8A55B901328E15DB16D6 final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Default_Fist_C_OnEventReceived_5E573E1E46AA8A55B901328E15DB16D6) == 0x000008, "Wrong alignment on Default_Fist_C_OnEventReceived_5E573E1E46AA8A55B901328E15DB16D6");
static_assert(sizeof(Default_Fist_C_OnEventReceived_5E573E1E46AA8A55B901328E15DB16D6) == 0x000040, "Wrong size on Default_Fist_C_OnEventReceived_5E573E1E46AA8A55B901328E15DB16D6");
static_assert(offsetof(Default_Fist_C_OnEventReceived_5E573E1E46AA8A55B901328E15DB16D6, Event) == 0x000000, "Member 'Default_Fist_C_OnEventReceived_5E573E1E46AA8A55B901328E15DB16D6::Event' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.OnEventReceived_07EC16C846839553D378A2A49AB9C354
// 0x0040 (0x0040 - 0x0000)
struct Default_Fist_C_OnEventReceived_07EC16C846839553D378A2A49AB9C354 final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Default_Fist_C_OnEventReceived_07EC16C846839553D378A2A49AB9C354) == 0x000008, "Wrong alignment on Default_Fist_C_OnEventReceived_07EC16C846839553D378A2A49AB9C354");
static_assert(sizeof(Default_Fist_C_OnEventReceived_07EC16C846839553D378A2A49AB9C354) == 0x000040, "Wrong size on Default_Fist_C_OnEventReceived_07EC16C846839553D378A2A49AB9C354");
static_assert(offsetof(Default_Fist_C_OnEventReceived_07EC16C846839553D378A2A49AB9C354, Event) == 0x000000, "Member 'Default_Fist_C_OnEventReceived_07EC16C846839553D378A2A49AB9C354::Event' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.OnEvent_726A9F1347453B65ABB65DAE8EEB8F6E
// 0x0140 (0x0140 - 0x0000)
struct Default_Fist_C_OnEvent_726A9F1347453B65ABB65DAE8EEB8F6E final
{
public:
	struct FM1CalcDamageInfo                      DamageInfo;                                        // 0x0000(0x0140)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(Default_Fist_C_OnEvent_726A9F1347453B65ABB65DAE8EEB8F6E) == 0x000008, "Wrong alignment on Default_Fist_C_OnEvent_726A9F1347453B65ABB65DAE8EEB8F6E");
static_assert(sizeof(Default_Fist_C_OnEvent_726A9F1347453B65ABB65DAE8EEB8F6E) == 0x000140, "Wrong size on Default_Fist_C_OnEvent_726A9F1347453B65ABB65DAE8EEB8F6E");
static_assert(offsetof(Default_Fist_C_OnEvent_726A9F1347453B65ABB65DAE8EEB8F6E, DamageInfo) == 0x000000, "Member 'Default_Fist_C_OnEvent_726A9F1347453B65ABB65DAE8EEB8F6E::DamageInfo' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.OnCompleted_D54F2B39422DA08EA130338C89FA1FCE
// 0x0040 (0x0040 - 0x0000)
struct Default_Fist_C_OnCompleted_D54F2B39422DA08EA130338C89FA1FCE final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Default_Fist_C_OnCompleted_D54F2B39422DA08EA130338C89FA1FCE) == 0x000008, "Wrong alignment on Default_Fist_C_OnCompleted_D54F2B39422DA08EA130338C89FA1FCE");
static_assert(sizeof(Default_Fist_C_OnCompleted_D54F2B39422DA08EA130338C89FA1FCE) == 0x000040, "Wrong size on Default_Fist_C_OnCompleted_D54F2B39422DA08EA130338C89FA1FCE");
static_assert(offsetof(Default_Fist_C_OnCompleted_D54F2B39422DA08EA130338C89FA1FCE, Event) == 0x000000, "Member 'Default_Fist_C_OnCompleted_D54F2B39422DA08EA130338C89FA1FCE::Event' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.OnCompleted_5E573E1E46AA8A55B901328E15DB16D6
// 0x0040 (0x0040 - 0x0000)
struct Default_Fist_C_OnCompleted_5E573E1E46AA8A55B901328E15DB16D6 final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Default_Fist_C_OnCompleted_5E573E1E46AA8A55B901328E15DB16D6) == 0x000008, "Wrong alignment on Default_Fist_C_OnCompleted_5E573E1E46AA8A55B901328E15DB16D6");
static_assert(sizeof(Default_Fist_C_OnCompleted_5E573E1E46AA8A55B901328E15DB16D6) == 0x000040, "Wrong size on Default_Fist_C_OnCompleted_5E573E1E46AA8A55B901328E15DB16D6");
static_assert(offsetof(Default_Fist_C_OnCompleted_5E573E1E46AA8A55B901328E15DB16D6, Event) == 0x000000, "Member 'Default_Fist_C_OnCompleted_5E573E1E46AA8A55B901328E15DB16D6::Event' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.OnCompleted_07EC16C846839553D378A2A49AB9C354
// 0x0040 (0x0040 - 0x0000)
struct Default_Fist_C_OnCompleted_07EC16C846839553D378A2A49AB9C354 final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Default_Fist_C_OnCompleted_07EC16C846839553D378A2A49AB9C354) == 0x000008, "Wrong alignment on Default_Fist_C_OnCompleted_07EC16C846839553D378A2A49AB9C354");
static_assert(sizeof(Default_Fist_C_OnCompleted_07EC16C846839553D378A2A49AB9C354) == 0x000040, "Wrong size on Default_Fist_C_OnCompleted_07EC16C846839553D378A2A49AB9C354");
static_assert(offsetof(Default_Fist_C_OnCompleted_07EC16C846839553D378A2A49AB9C354, Event) == 0x000000, "Member 'Default_Fist_C_OnCompleted_07EC16C846839553D378A2A49AB9C354::Event' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.OnBlendOut_D54F2B39422DA08EA130338C89FA1FCE
// 0x0040 (0x0040 - 0x0000)
struct Default_Fist_C_OnBlendOut_D54F2B39422DA08EA130338C89FA1FCE final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Default_Fist_C_OnBlendOut_D54F2B39422DA08EA130338C89FA1FCE) == 0x000008, "Wrong alignment on Default_Fist_C_OnBlendOut_D54F2B39422DA08EA130338C89FA1FCE");
static_assert(sizeof(Default_Fist_C_OnBlendOut_D54F2B39422DA08EA130338C89FA1FCE) == 0x000040, "Wrong size on Default_Fist_C_OnBlendOut_D54F2B39422DA08EA130338C89FA1FCE");
static_assert(offsetof(Default_Fist_C_OnBlendOut_D54F2B39422DA08EA130338C89FA1FCE, Event) == 0x000000, "Member 'Default_Fist_C_OnBlendOut_D54F2B39422DA08EA130338C89FA1FCE::Event' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.OnBlendOut_5E573E1E46AA8A55B901328E15DB16D6
// 0x0040 (0x0040 - 0x0000)
struct Default_Fist_C_OnBlendOut_5E573E1E46AA8A55B901328E15DB16D6 final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Default_Fist_C_OnBlendOut_5E573E1E46AA8A55B901328E15DB16D6) == 0x000008, "Wrong alignment on Default_Fist_C_OnBlendOut_5E573E1E46AA8A55B901328E15DB16D6");
static_assert(sizeof(Default_Fist_C_OnBlendOut_5E573E1E46AA8A55B901328E15DB16D6) == 0x000040, "Wrong size on Default_Fist_C_OnBlendOut_5E573E1E46AA8A55B901328E15DB16D6");
static_assert(offsetof(Default_Fist_C_OnBlendOut_5E573E1E46AA8A55B901328E15DB16D6, Event) == 0x000000, "Member 'Default_Fist_C_OnBlendOut_5E573E1E46AA8A55B901328E15DB16D6::Event' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.OnBlendOut_07EC16C846839553D378A2A49AB9C354
// 0x0040 (0x0040 - 0x0000)
struct Default_Fist_C_OnBlendOut_07EC16C846839553D378A2A49AB9C354 final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Default_Fist_C_OnBlendOut_07EC16C846839553D378A2A49AB9C354) == 0x000008, "Wrong alignment on Default_Fist_C_OnBlendOut_07EC16C846839553D378A2A49AB9C354");
static_assert(sizeof(Default_Fist_C_OnBlendOut_07EC16C846839553D378A2A49AB9C354) == 0x000040, "Wrong size on Default_Fist_C_OnBlendOut_07EC16C846839553D378A2A49AB9C354");
static_assert(offsetof(Default_Fist_C_OnBlendOut_07EC16C846839553D378A2A49AB9C354, Event) == 0x000000, "Member 'Default_Fist_C_OnBlendOut_07EC16C846839553D378A2A49AB9C354::Event' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.OnAbilityEvent_283F594C46065D7C2BA6929F6639E384
// 0x0040 (0x0040 - 0x0000)
struct Default_Fist_C_OnAbilityEvent_283F594C46065D7C2BA6929F6639E384 final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Default_Fist_C_OnAbilityEvent_283F594C46065D7C2BA6929F6639E384) == 0x000008, "Wrong alignment on Default_Fist_C_OnAbilityEvent_283F594C46065D7C2BA6929F6639E384");
static_assert(sizeof(Default_Fist_C_OnAbilityEvent_283F594C46065D7C2BA6929F6639E384) == 0x000040, "Wrong size on Default_Fist_C_OnAbilityEvent_283F594C46065D7C2BA6929F6639E384");
static_assert(offsetof(Default_Fist_C_OnAbilityEvent_283F594C46065D7C2BA6929F6639E384, Event) == 0x000000, "Member 'Default_Fist_C_OnAbilityEvent_283F594C46065D7C2BA6929F6639E384::Event' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.OnAbilityEvent_09DFF00F4B92C4EE431B928C804677D1
// 0x0040 (0x0040 - 0x0000)
struct Default_Fist_C_OnAbilityEvent_09DFF00F4B92C4EE431B928C804677D1 final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Default_Fist_C_OnAbilityEvent_09DFF00F4B92C4EE431B928C804677D1) == 0x000008, "Wrong alignment on Default_Fist_C_OnAbilityEvent_09DFF00F4B92C4EE431B928C804677D1");
static_assert(sizeof(Default_Fist_C_OnAbilityEvent_09DFF00F4B92C4EE431B928C804677D1) == 0x000040, "Wrong size on Default_Fist_C_OnAbilityEvent_09DFF00F4B92C4EE431B928C804677D1");
static_assert(offsetof(Default_Fist_C_OnAbilityEvent_09DFF00F4B92C4EE431B928C804677D1, Event) == 0x000000, "Member 'Default_Fist_C_OnAbilityEvent_09DFF00F4B92C4EE431B928C804677D1::Event' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.LaunchForWireLand
// 0x0018 (0x0018 - 0x0000)
struct Default_Fist_C_LaunchForWireLand final
{
public:
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_As___;                          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Default_Fist_C_LaunchForWireLand) == 0x000008, "Wrong alignment on Default_Fist_C_LaunchForWireLand");
static_assert(sizeof(Default_Fist_C_LaunchForWireLand) == 0x000018, "Wrong size on Default_Fist_C_LaunchForWireLand");
static_assert(offsetof(Default_Fist_C_LaunchForWireLand, CallFunc_GetOwnerActor_ReturnValue) == 0x000000, "Member 'Default_Fist_C_LaunchForWireLand::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_LaunchForWireLand, K2Node_DynamicCast_As___) == 0x000008, "Member 'Default_Fist_C_LaunchForWireLand::K2Node_DynamicCast_As___' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_LaunchForWireLand, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Default_Fist_C_LaunchForWireLand::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.HandleAbilityEvent
// 0x00C8 (0x00C8 - 0x0000)
struct Default_Fist_C_HandleAbilityEvent final
{
public:
	struct FM1AbilityEvent                        AbilityEvent;                                      // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FName                                   AttachSocket;                                      // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AM1SkeletalMeshActor*                   SpawnedMesh;                                       // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEventData_AnimNotifySubSkillMeshSpawn EventData;                                         // 0x0050(0x0028)(Edit, BlueprintVisible)
	struct FM1AbilityEventData_AnimNotifySubSkillMeshSpawn CallFunc_GetAbilityEventData_AnimNotifySubSkillMeshSpawn_ReturnValue; // 0x0078(0x0028)()
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue_1;                 // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3[0x5];                                       // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AM1SkeletalMeshActor*                   CallFunc_Map_Find_Value;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AM1SkeletalMeshActor*                   CallFunc_Map_Find_Value_1;                         // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Default_Fist_C_HandleAbilityEvent) == 0x000008, "Wrong alignment on Default_Fist_C_HandleAbilityEvent");
static_assert(sizeof(Default_Fist_C_HandleAbilityEvent) == 0x0000C8, "Wrong size on Default_Fist_C_HandleAbilityEvent");
static_assert(offsetof(Default_Fist_C_HandleAbilityEvent, AbilityEvent) == 0x000000, "Member 'Default_Fist_C_HandleAbilityEvent::AbilityEvent' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_HandleAbilityEvent, AttachSocket) == 0x000040, "Member 'Default_Fist_C_HandleAbilityEvent::AttachSocket' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_HandleAbilityEvent, SpawnedMesh) == 0x000048, "Member 'Default_Fist_C_HandleAbilityEvent::SpawnedMesh' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_HandleAbilityEvent, EventData) == 0x000050, "Member 'Default_Fist_C_HandleAbilityEvent::EventData' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_HandleAbilityEvent, CallFunc_GetAbilityEventData_AnimNotifySubSkillMeshSpawn_ReturnValue) == 0x000078, "Member 'Default_Fist_C_HandleAbilityEvent::CallFunc_GetAbilityEventData_AnimNotifySubSkillMeshSpawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_HandleAbilityEvent, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0000A0, "Member 'Default_Fist_C_HandleAbilityEvent::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_HandleAbilityEvent, CallFunc_Map_Remove_ReturnValue) == 0x0000A1, "Member 'Default_Fist_C_HandleAbilityEvent::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_HandleAbilityEvent, CallFunc_Map_Remove_ReturnValue_1) == 0x0000A2, "Member 'Default_Fist_C_HandleAbilityEvent::CallFunc_Map_Remove_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_HandleAbilityEvent, CallFunc_Map_Find_Value) == 0x0000A8, "Member 'Default_Fist_C_HandleAbilityEvent::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_HandleAbilityEvent, CallFunc_Map_Find_ReturnValue) == 0x0000B0, "Member 'Default_Fist_C_HandleAbilityEvent::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_HandleAbilityEvent, CallFunc_IsValid_ReturnValue) == 0x0000B1, "Member 'Default_Fist_C_HandleAbilityEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_HandleAbilityEvent, CallFunc_Map_Find_Value_1) == 0x0000B8, "Member 'Default_Fist_C_HandleAbilityEvent::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_HandleAbilityEvent, CallFunc_Map_Find_ReturnValue_1) == 0x0000C0, "Member 'Default_Fist_C_HandleAbilityEvent::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_HandleAbilityEvent, CallFunc_IsValid_ReturnValue_1) == 0x0000C1, "Member 'Default_Fist_C_HandleAbilityEvent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.GetNonChargeAnimMontage
// 0x0060 (0x0060 - 0x0000)
struct Default_Fist_C_GetNonChargeAnimMontage final
{
public:
	class UAnimMontage*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EM1PlayerAnimType                             CallFunc_GetPlayerAnimType_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSubSkillSetting                       CallFunc_Map_Find_Value;                           // 0x0020(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_1;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EM1CharacterGender                            CallFunc_GetPlayerAnimPresetType_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Default_Fist_C_GetNonChargeAnimMontage) == 0x000008, "Wrong alignment on Default_Fist_C_GetNonChargeAnimMontage");
static_assert(sizeof(Default_Fist_C_GetNonChargeAnimMontage) == 0x000060, "Wrong size on Default_Fist_C_GetNonChargeAnimMontage");
static_assert(offsetof(Default_Fist_C_GetNonChargeAnimMontage, ReturnValue) == 0x000000, "Member 'Default_Fist_C_GetNonChargeAnimMontage::ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetNonChargeAnimMontage, Temp_bool_Variable) == 0x000008, "Member 'Default_Fist_C_GetNonChargeAnimMontage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetNonChargeAnimMontage, CallFunc_GetOwnerActor_ReturnValue) == 0x000010, "Member 'Default_Fist_C_GetNonChargeAnimMontage::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetNonChargeAnimMontage, CallFunc_GetPlayerAnimType_ReturnValue) == 0x000018, "Member 'Default_Fist_C_GetNonChargeAnimMontage::CallFunc_GetPlayerAnimType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetNonChargeAnimMontage, CallFunc_Map_Find_Value) == 0x000020, "Member 'Default_Fist_C_GetNonChargeAnimMontage::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetNonChargeAnimMontage, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'Default_Fist_C_GetNonChargeAnimMontage::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetNonChargeAnimMontage, CallFunc_GetOwnerActor_ReturnValue_1) == 0x000048, "Member 'Default_Fist_C_GetNonChargeAnimMontage::CallFunc_GetOwnerActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetNonChargeAnimMontage, CallFunc_GetPlayerAnimPresetType_ReturnValue) == 0x000050, "Member 'Default_Fist_C_GetNonChargeAnimMontage::CallFunc_GetPlayerAnimPresetType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetNonChargeAnimMontage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000051, "Member 'Default_Fist_C_GetNonChargeAnimMontage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetNonChargeAnimMontage, K2Node_Select_Default) == 0x000058, "Member 'Default_Fist_C_GetNonChargeAnimMontage::K2Node_Select_Default' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.GetAttackTag
// 0x0058 (0x0058 - 0x0000)
struct Default_Fist_C_GetAttackTag final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0014(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x001C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x0024(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0044(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default_1;                           // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Default_Fist_C_GetAttackTag) == 0x000008, "Wrong alignment on Default_Fist_C_GetAttackTag");
static_assert(sizeof(Default_Fist_C_GetAttackTag) == 0x000058, "Wrong size on Default_Fist_C_GetAttackTag");
static_assert(offsetof(Default_Fist_C_GetAttackTag, Tag) == 0x000000, "Member 'Default_Fist_C_GetAttackTag::Tag' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAttackTag, Temp_struct_Variable) == 0x000008, "Member 'Default_Fist_C_GetAttackTag::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAttackTag, Temp_bool_Variable) == 0x000010, "Member 'Default_Fist_C_GetAttackTag::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAttackTag, Temp_struct_Variable_1) == 0x000014, "Member 'Default_Fist_C_GetAttackTag::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAttackTag, Temp_struct_Variable_2) == 0x00001C, "Member 'Default_Fist_C_GetAttackTag::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAttackTag, Temp_struct_Variable_3) == 0x000024, "Member 'Default_Fist_C_GetAttackTag::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAttackTag, CallFunc_GetOwnerActor_ReturnValue) == 0x000030, "Member 'Default_Fist_C_GetAttackTag::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAttackTag, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'Default_Fist_C_GetAttackTag::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAttackTag, Temp_bool_Variable_1) == 0x000040, "Member 'Default_Fist_C_GetAttackTag::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAttackTag, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000041, "Member 'Default_Fist_C_GetAttackTag::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAttackTag, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000042, "Member 'Default_Fist_C_GetAttackTag::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAttackTag, K2Node_Select_Default) == 0x000044, "Member 'Default_Fist_C_GetAttackTag::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAttackTag, CallFunc_BooleanOR_ReturnValue) == 0x00004C, "Member 'Default_Fist_C_GetAttackTag::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAttackTag, K2Node_Select_Default_1) == 0x000050, "Member 'Default_Fist_C_GetAttackTag::K2Node_Select_Default_1' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.GetAnimMontage
// 0x0058 (0x0058 - 0x0000)
struct Default_Fist_C_GetAnimMontage final
{
public:
	struct FGameplayTag                           Key;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSubSkillSetting                       CallFunc_Map_Find_Value;                           // 0x0018(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EM1CharacterGender                            CallFunc_GetPlayerAnimPresetType_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Default_Fist_C_GetAnimMontage) == 0x000008, "Wrong alignment on Default_Fist_C_GetAnimMontage");
static_assert(sizeof(Default_Fist_C_GetAnimMontage) == 0x000058, "Wrong size on Default_Fist_C_GetAnimMontage");
static_assert(offsetof(Default_Fist_C_GetAnimMontage, Key) == 0x000000, "Member 'Default_Fist_C_GetAnimMontage::Key' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAnimMontage, ReturnValue) == 0x000008, "Member 'Default_Fist_C_GetAnimMontage::ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAnimMontage, Temp_bool_Variable) == 0x000010, "Member 'Default_Fist_C_GetAnimMontage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAnimMontage, CallFunc_Map_Find_Value) == 0x000018, "Member 'Default_Fist_C_GetAnimMontage::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAnimMontage, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'Default_Fist_C_GetAnimMontage::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAnimMontage, CallFunc_GetOwnerActor_ReturnValue) == 0x000040, "Member 'Default_Fist_C_GetAnimMontage::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAnimMontage, CallFunc_GetPlayerAnimPresetType_ReturnValue) == 0x000048, "Member 'Default_Fist_C_GetAnimMontage::CallFunc_GetPlayerAnimPresetType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAnimMontage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000049, "Member 'Default_Fist_C_GetAnimMontage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAnimMontage, K2Node_Select_Default) == 0x000050, "Member 'Default_Fist_C_GetAnimMontage::K2Node_Select_Default' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.Get Target Actors
// 0x01F8 (0x01F8 - 0x0000)
struct Default_Fist_C_Get_Target_Actors final
{
public:
	struct FSubSkillCollision                     DamageCollision;                                   // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         OutActors;                                         // 0x0028(0x0010)(Parm, OutParm)
	double                                        DamageLocationXOffset;                             // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FinalDamageExtent;                                 // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               FinalDamageRotation;                               // 0x004C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                FinalDamageLocation;                               // 0x0058(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0064(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x006C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x0074(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheatIsAbilityDrawDebug_ReturnValue;      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheatIsAbilityDrawDebug_ReturnValue_1;    // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheatIsAbilityDrawDebug_ReturnValue_2;    // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F[0x1];                                       // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_1;              // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_2;              // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_FindCapsuleOverlapActors_OutActors;       // 0x0140(0x0010)(ReferenceParm)
	bool                                          CallFunc_FindCapsuleOverlapActors_ReturnValue;     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_FindActorsInRadius_OutActors;             // 0x0158(0x0010)(ReferenceParm)
	bool                                          CallFunc_FindActorsInRadius_ReturnValue;           // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_3;              // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_4;              // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_FindBoxOverlapActors_OutActors;           // 0x0180(0x0010)(ReferenceParm)
	bool                                          CallFunc_FindBoxOverlapActors_ReturnValue;         // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_5;              // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugCapsule_Radius_ImplicitCast;     // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugCapsule_HalfHeight_ImplicitCast; // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugSphere_Radius_ImplicitCast;      // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindCapsuleOverlapActors_InRadius_ImplicitCast; // 0x01E8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindCapsuleOverlapActors_InHalfHeight_ImplicitCast; // 0x01EC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindActorsInRadius_InRadius_ImplicitCast; // 0x01F0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Default_Fist_C_Get_Target_Actors) == 0x000008, "Wrong alignment on Default_Fist_C_Get_Target_Actors");
static_assert(sizeof(Default_Fist_C_Get_Target_Actors) == 0x0001F8, "Wrong size on Default_Fist_C_Get_Target_Actors");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, DamageCollision) == 0x000000, "Member 'Default_Fist_C_Get_Target_Actors::DamageCollision' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, OutActors) == 0x000028, "Member 'Default_Fist_C_Get_Target_Actors::OutActors' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, DamageLocationXOffset) == 0x000038, "Member 'Default_Fist_C_Get_Target_Actors::DamageLocationXOffset' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, FinalDamageExtent) == 0x000040, "Member 'Default_Fist_C_Get_Target_Actors::FinalDamageExtent' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, FinalDamageRotation) == 0x00004C, "Member 'Default_Fist_C_Get_Target_Actors::FinalDamageRotation' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, FinalDamageLocation) == 0x000058, "Member 'Default_Fist_C_Get_Target_Actors::FinalDamageLocation' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, Temp_struct_Variable) == 0x000064, "Member 'Default_Fist_C_Get_Target_Actors::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, Temp_struct_Variable_1) == 0x00006C, "Member 'Default_Fist_C_Get_Target_Actors::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, Temp_struct_Variable_2) == 0x000074, "Member 'Default_Fist_C_Get_Target_Actors::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_CheatIsAbilityDrawDebug_ReturnValue) == 0x00007C, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_CheatIsAbilityDrawDebug_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_CheatIsAbilityDrawDebug_ReturnValue_1) == 0x00007D, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_CheatIsAbilityDrawDebug_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_CheatIsAbilityDrawDebug_ReturnValue_2) == 0x00007E, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_CheatIsAbilityDrawDebug_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_GetOwnerActor_ReturnValue) == 0x000080, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000088, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_BreakVector_X) == 0x000098, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_BreakVector_Y) == 0x0000A0, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_BreakVector_Z) == 0x0000A8, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, K2Node_SwitchEnum_CmpSuccess) == 0x0000B0, "Member 'Default_Fist_C_Get_Target_Actors::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_MakeVector_ReturnValue) == 0x0000B4, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C0, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C4, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_BreakVector_X_1) == 0x0000D0, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_BreakVector_Y_1) == 0x0000D8, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_BreakVector_Z_1) == 0x0000E0, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_BreakVector_X_2) == 0x0000E8, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_BreakVector_Y_2) == 0x0000F0, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_BreakVector_Z_2) == 0x0000F8, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_BreakVector_X_3) == 0x000100, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_BreakVector_Y_3) == 0x000108, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_BreakVector_Z_3) == 0x000110, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_BreakVector_X_4) == 0x000118, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_BreakVector_Y_4) == 0x000120, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_BreakVector_Z_4) == 0x000128, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_GetOwnerActor_ReturnValue_1) == 0x000130, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_GetOwnerActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_GetOwnerActor_ReturnValue_2) == 0x000138, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_GetOwnerActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_FindCapsuleOverlapActors_OutActors) == 0x000140, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_FindCapsuleOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_FindCapsuleOverlapActors_ReturnValue) == 0x000150, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_FindCapsuleOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_FindActorsInRadius_OutActors) == 0x000158, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_FindActorsInRadius_OutActors' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_FindActorsInRadius_ReturnValue) == 0x000168, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_FindActorsInRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_GetOwnerActor_ReturnValue_3) == 0x000170, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_GetOwnerActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_GetOwnerActor_ReturnValue_4) == 0x000178, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_GetOwnerActor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_FindBoxOverlapActors_OutActors) == 0x000180, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_FindBoxOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_FindBoxOverlapActors_ReturnValue) == 0x000190, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_FindBoxOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000194, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_ComposeRotators_ReturnValue) == 0x0001A0, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_GetOwnerActor_ReturnValue_5) == 0x0001B0, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_GetOwnerActor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x0001B8, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0001C4, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001D0, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_DrawDebugCapsule_Radius_ImplicitCast) == 0x0001DC, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_DrawDebugCapsule_Radius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_DrawDebugCapsule_HalfHeight_ImplicitCast) == 0x0001E0, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_DrawDebugCapsule_HalfHeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_DrawDebugSphere_Radius_ImplicitCast) == 0x0001E4, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_DrawDebugSphere_Radius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_FindCapsuleOverlapActors_InRadius_ImplicitCast) == 0x0001E8, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_FindCapsuleOverlapActors_InRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_FindCapsuleOverlapActors_InHalfHeight_ImplicitCast) == 0x0001EC, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_FindCapsuleOverlapActors_InHalfHeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_Get_Target_Actors, CallFunc_FindActorsInRadius_InRadius_ImplicitCast) == 0x0001F0, "Member 'Default_Fist_C_Get_Target_Actors::CallFunc_FindActorsInRadius_InRadius_ImplicitCast' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.ExecuteUbergraph_Default_Fist
// 0x0A40 (0x0A40 - 0x0000)
struct Default_Fist_C_ExecuteUbergraph_Default_Fist final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetNonChargeAnimMontage_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UM1AbilityTask_PlayMontageAndWait*      CallFunc_PlayMontageAndWaitForEvent_ReturnValue;   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1CalcDamageInfo                      K2Node_CustomEvent_DamageInfo;                     // 0x0020(0x0140)(ConstParm, ContainsInstancedReference)
	TDelegate<void(struct FM1CalcDamageInfo& DamageInfo)> K2Node_CreateDelegate_OutputDelegate;              // 0x0160(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1CalcDamageInfo                      Temp_struct_Variable;                              // 0x0170(0x0140)(ContainsInstancedReference)
	class UM1AbilityTask_WaitDamageEvent*         CallFunc_WaitGiveDamageEvent_ReturnValue;          // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0308(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DestinationReached;             // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_TimedOut;                       // 0x0345(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_346[0x2];                                      // 0x0346(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_FinalTargetLocation;            // 0x0348(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool DestinationReached, bool TimedOut, const struct FVector& FinalTargetLocation)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0354(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_1;                            // 0x0364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372[0x2];                                      // 0x0372(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0374(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_8;                        // 0x0388(0x0040)(ConstParm)
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_7;                        // 0x03C8(0x0040)(ConstParm)
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0408(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_6;                        // 0x0418(0x0040)(ConstParm)
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0458(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        Temp_struct_Variable_2;                            // 0x0468(0x0040)()
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x04A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_5;                        // 0x04B8(0x0040)(ConstParm)
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_4;                        // 0x04F8(0x0040)(ConstParm)
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0538(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_3;                        // 0x0548(0x0040)(ConstParm)
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0588(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        Temp_struct_Variable_3;                            // 0x0598(0x0040)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D9[0x7];                                      // 0x05D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_2;                        // 0x05E0(0x0040)(ConstParm)
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x0620(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x0630(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_1;                        // 0x0640(0x0040)(ConstParm)
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event;                          // 0x0680(0x0040)(ConstParm)
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_10;           // 0x06C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        Temp_struct_Variable_4;                            // 0x06D0(0x0040)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_9;                        // 0x0718(0x0040)(ConstParm)
	bool                                          K2Node_Event_bCancelled;                           // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryCommitAbility_ReturnValue;             // 0x0759(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75A[0x6];                                      // 0x075A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AM1SkeletalMeshActor*>           CallFunc_Map_Values_Values;                        // 0x0760(0x0010)(ReferenceParm)
	class AM1SkeletalMeshActor*                   CallFunc_Array_Get_Item;                           // 0x0770(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x077C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77D[0x3];                                      // 0x077D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IM1AbilityBase>        CallFunc_InvokeDotDamageStatusEffect_InAbility_CastInput; // 0x0780(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetAttackTag_Tag;                         // 0x0790(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_CustomEvent_InEnemies;                      // 0x0798(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x07A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x07B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x07B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckValidateRadius_ReturnValue;          // 0x07B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B6[0x2];                                      // 0x07B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1AbilityTask_WaitTick*                CallFunc_WaitTick_ReturnValue;                     // 0x07B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x07C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C5[0x3];                                      // 0x07C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x07C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x07CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7CD[0x3];                                      // 0x07CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x07D0(0x0020)()
	TArray<struct FM1AbilityId>                   CallFunc_InvokeAllStatusEffectToTargetByTag_ReturnValue; // 0x07F0(0x0010)(ReferenceParm)
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x0800(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_TryStartOperationsToSelfByTag_ReturnValue; // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_811[0x7];                                      // 0x0811(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0818(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0820(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_829[0x3];                                      // 0x0829(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x082C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_1;              // 0x0830(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_As___;                          // 0x0838(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0840(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            CallFunc_GetCollisionResponseToChannel_ReturnValue; // 0x0841(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_842[0x2];                                      // 0x0842(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_DeltaTime;                      // 0x0844(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_849[0x7];                                      // 0x0849(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalcValidateTolerance_OutValidateRadius;  // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x0858(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85C[0x4];                                      // 0x085C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_2;              // 0x0860(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UM1AbilityTask_PlayMontageAndWait*      CallFunc_PlayMontageAndWaitForEvent_ReturnValue_1; // 0x0868(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EM1CharacterGender                            CallFunc_GetPlayerAnimPresetType_ReturnValue;      // 0x0870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0871(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0872(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_873[0x5];                                      // 0x0873(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0878(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float DeltaTime)>              K2Node_CreateDelegate_OutputDelegate_12;           // 0x0884(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0894(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_895[0x3];                                      // 0x0895(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0898(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x089C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89D[0x3];                                      // 0x089D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_LocalRebaseVec_ReturnValue;               // 0x08A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8AC[0x4];                                      // 0x08AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1AbilityTask_WaitAbilityEvent*        CallFunc_WaitAbilityEvent_ReturnValue;             // 0x08B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UM1AbilityTask_ApplyRootMotionMoveToForce* CallFunc_ApplyRootMotionMoveToForce_ReturnValue;   // 0x08B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x08C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C2[0x6];                                      // 0x08C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEvent                        Temp_struct_Variable_5;                            // 0x08C8(0x0040)()
	struct FSubSkillSetting                       CallFunc_Map_Find_Value;                           // 0x0908(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_929[0x7];                                      // 0x0929(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1AbilityTask_WaitAbilityEvent*        CallFunc_WaitAbilityEvent_ReturnValue_1;           // 0x0930(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_939[0x7];                                      // 0x0939(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_10;                       // 0x0940(0x0040)(ConstParm)
	class UAnimMontage*                           CallFunc_GetAnimMontage_ReturnValue;               // 0x0980(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UM1AbilityTask_PlayMontageAndWait*      CallFunc_PlayMontageAndWaitForEvent_ReturnValue_2; // 0x0988(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0990(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0991(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_992[0x6];                                      // 0x0992(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_3;              // 0x0998(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMovementComponent*                     CallFunc_GetComponentByClass_ReturnValue_1;        // 0x09A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x09A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1; // 0x09B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B5[0x3];                                      // 0x09B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_13;           // 0x09B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        Temp_struct_Variable_6;                            // 0x09C8(0x0040)()
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_4;              // 0x0A08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EM1PlayerAnimType                             CallFunc_GetPlayerAnimType_ReturnValue;            // 0x0A10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A11[0x7];                                      // 0x0A11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSubSkillSetting                       CallFunc_Map_Find_Value_1;                         // 0x0A18(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Default_Fist_C_ExecuteUbergraph_Default_Fist) == 0x000008, "Wrong alignment on Default_Fist_C_ExecuteUbergraph_Default_Fist");
static_assert(sizeof(Default_Fist_C_ExecuteUbergraph_Default_Fist) == 0x000A40, "Wrong size on Default_Fist_C_ExecuteUbergraph_Default_Fist");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, EntryPoint) == 0x000000, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::EntryPoint' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_GetNonChargeAnimMontage_ReturnValue) == 0x000008, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_GetNonChargeAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_PlayMontageAndWaitForEvent_ReturnValue) == 0x000010, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_PlayMontageAndWaitForEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CustomEvent_DamageInfo) == 0x000020, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CustomEvent_DamageInfo' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CreateDelegate_OutputDelegate) == 0x000160, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, Temp_struct_Variable) == 0x000170, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_WaitGiveDamageEvent_ReturnValue) == 0x0002B0, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_WaitGiveDamageEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_IsValid_ReturnValue_1) == 0x0002B8, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, Temp_bool_Variable) == 0x0002B9, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_BreakHitResult_bBlockingHit) == 0x0002BA, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002BB, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_BreakHitResult_Time) == 0x0002BC, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_BreakHitResult_Distance) == 0x0002C0, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_BreakHitResult_Location) == 0x0002C4, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_BreakHitResult_ImpactPoint) == 0x0002D0, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_BreakHitResult_Normal) == 0x0002DC, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_BreakHitResult_ImpactNormal) == 0x0002E8, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_BreakHitResult_PhysMat) == 0x0002F8, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_BreakHitResult_HitActor) == 0x000300, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_BreakHitResult_HitComponent) == 0x000308, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_BreakHitResult_HitBoneName) == 0x000310, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_BreakHitResult_BoneName) == 0x000318, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_BreakHitResult_HitItem) == 0x000320, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_BreakHitResult_ElementIndex) == 0x000324, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_BreakHitResult_FaceIndex) == 0x000328, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_BreakHitResult_TraceStart) == 0x00032C, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_BreakHitResult_TraceEnd) == 0x000338, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CustomEvent_DestinationReached) == 0x000344, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CustomEvent_DestinationReached' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CustomEvent_TimedOut) == 0x000345, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CustomEvent_TimedOut' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CustomEvent_FinalTargetLocation) == 0x000348, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CustomEvent_FinalTargetLocation' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CreateDelegate_OutputDelegate_1) == 0x000354, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, Temp_struct_Variable_1) == 0x000364, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, Temp_bool_Variable_1) == 0x000370, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, Temp_bool_Variable_2) == 0x000371, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CreateDelegate_OutputDelegate_2) == 0x000374, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CustomEvent_Event_8) == 0x000388, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CustomEvent_Event_8' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CustomEvent_Event_7) == 0x0003C8, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CustomEvent_Event_7' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CreateDelegate_OutputDelegate_3) == 0x000408, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CustomEvent_Event_6) == 0x000418, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CustomEvent_Event_6' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CreateDelegate_OutputDelegate_4) == 0x000458, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, Temp_struct_Variable_2) == 0x000468, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CreateDelegate_OutputDelegate_5) == 0x0004A8, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CustomEvent_Event_5) == 0x0004B8, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CustomEvent_Event_5' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CustomEvent_Event_4) == 0x0004F8, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CustomEvent_Event_4' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CreateDelegate_OutputDelegate_6) == 0x000538, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CustomEvent_Event_3) == 0x000548, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CustomEvent_Event_3' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CreateDelegate_OutputDelegate_7) == 0x000588, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, Temp_struct_Variable_3) == 0x000598, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_IsValid_ReturnValue_2) == 0x0005D8, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CustomEvent_Event_2) == 0x0005E0, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CustomEvent_Event_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CreateDelegate_OutputDelegate_8) == 0x000620, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CreateDelegate_OutputDelegate_9) == 0x000630, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CustomEvent_Event_1) == 0x000640, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CustomEvent_Event_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CustomEvent_Event) == 0x000680, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CustomEvent_Event' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CreateDelegate_OutputDelegate_10) == 0x0006C0, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, Temp_struct_Variable_4) == 0x0006D0, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, Temp_int_Array_Index_Variable) == 0x000710, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, Temp_int_Array_Index_Variable_1) == 0x000714, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CustomEvent_Event_9) == 0x000718, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CustomEvent_Event_9' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_Event_bCancelled) == 0x000758, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_Event_bCancelled' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_TryCommitAbility_ReturnValue) == 0x000759, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_TryCommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_Map_Values_Values) == 0x000760, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_Array_Get_Item) == 0x000770, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_Array_Length_ReturnValue) == 0x000778, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_IsValid_ReturnValue_3) == 0x00077C, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_InvokeDotDamageStatusEffect_InAbility_CastInput) == 0x000780, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_InvokeDotDamageStatusEffect_InAbility_CastInput' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_GetAttackTag_Tag) == 0x000790, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_GetAttackTag_Tag' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CustomEvent_InEnemies) == 0x000798, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CustomEvent_InEnemies' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_Array_Get_Item_1) == 0x0007A8, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_Array_Length_ReturnValue_1) == 0x0007B0, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_IsValid_ReturnValue_4) == 0x0007B4, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_CheckValidateRadius_ReturnValue) == 0x0007B5, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_CheckValidateRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_WaitTick_ReturnValue) == 0x0007B8, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_WaitTick_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, Temp_int_Loop_Counter_Variable) == 0x0007C0, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_Less_IntInt_ReturnValue) == 0x0007C4, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_Add_IntInt_ReturnValue) == 0x0007C8, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_IsValid_ReturnValue_5) == 0x0007CC, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x0007D0, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_InvokeAllStatusEffectToTargetByTag_ReturnValue) == 0x0007F0, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_InvokeAllStatusEffectToTargetByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CreateDelegate_OutputDelegate_11) == 0x000800, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_BP_TryStartOperationsToSelfByTag_ReturnValue) == 0x000810, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_BP_TryStartOperationsToSelfByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_GetOwnerActor_ReturnValue) == 0x000818, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_GetComponentByClass_ReturnValue) == 0x000820, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x000828, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, Temp_real_Variable) == 0x00082C, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_GetOwnerActor_ReturnValue_1) == 0x000830, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_GetOwnerActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_DynamicCast_As___) == 0x000838, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_DynamicCast_As___' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_DynamicCast_bSuccess) == 0x000840, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_GetCollisionResponseToChannel_ReturnValue) == 0x000841, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_GetCollisionResponseToChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CustomEvent_DeltaTime) == 0x000844, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CustomEvent_DeltaTime' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_IsValid_ReturnValue_6) == 0x000848, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_CalcValidateTolerance_OutValidateRadius) == 0x000850, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_CalcValidateTolerance_OutValidateRadius' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_GetPlayLength_ReturnValue) == 0x000858, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_GetOwnerActor_ReturnValue_2) == 0x000860, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_GetOwnerActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_PlayMontageAndWaitForEvent_ReturnValue_1) == 0x000868, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_PlayMontageAndWaitForEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_GetPlayerAnimPresetType_ReturnValue) == 0x000870, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_GetPlayerAnimPresetType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000871, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_IsValid_ReturnValue_7) == 0x000872, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_Select_Default) == 0x000878, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, Temp_int_Loop_Counter_Variable_1) == 0x000880, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CreateDelegate_OutputDelegate_12) == 0x000884, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_Less_IntInt_ReturnValue_1) == 0x000894, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_Add_IntInt_ReturnValue_1) == 0x000898, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x00089C, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_LocalRebaseVec_ReturnValue) == 0x0008A0, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_LocalRebaseVec_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_WaitAbilityEvent_ReturnValue) == 0x0008B0, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_WaitAbilityEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_ApplyRootMotionMoveToForce_ReturnValue) == 0x0008B8, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_ApplyRootMotionMoveToForce_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_IsValid_ReturnValue_8) == 0x0008C0, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_IsValid_ReturnValue_9) == 0x0008C1, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, Temp_struct_Variable_5) == 0x0008C8, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_Map_Find_Value) == 0x000908, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_Map_Find_ReturnValue) == 0x000928, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_WaitAbilityEvent_ReturnValue_1) == 0x000930, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_WaitAbilityEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_IsValid_ReturnValue_10) == 0x000938, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CustomEvent_Event_10) == 0x000940, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CustomEvent_Event_10' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_GetAnimMontage_ReturnValue) == 0x000980, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_GetAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_PlayMontageAndWaitForEvent_ReturnValue_2) == 0x000988, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_PlayMontageAndWaitForEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_IsValid_ReturnValue_11) == 0x000990, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_IsValid_ReturnValue_12) == 0x000991, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_GetOwnerActor_ReturnValue_3) == 0x000998, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_GetOwnerActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0009A0, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_MakeVector_ReturnValue) == 0x0009A8, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1) == 0x0009B4, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, K2Node_CreateDelegate_OutputDelegate_13) == 0x0009B8, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, Temp_struct_Variable_6) == 0x0009C8, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_GetOwnerActor_ReturnValue_4) == 0x000A08, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_GetOwnerActor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_GetPlayerAnimType_ReturnValue) == 0x000A10, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_GetPlayerAnimType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_Map_Find_Value_1) == 0x000A18, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_ExecuteUbergraph_Default_Fist, CallFunc_Map_Find_ReturnValue_1) == 0x000A38, "Member 'Default_Fist_C_ExecuteUbergraph_Default_Fist::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.DamageToEnemy
// 0x0108 (0x0108 - 0x0000)
struct Default_Fist_C_DamageToEnemy final
{
public:
	int32                                         AttackCount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSubSkillSetting                       InSetting;                                         // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	struct FGameplayTagContainer                  AttackTag;                                         // 0x0028(0x0020)(Edit, BlueprintVisible)
	struct FVector                                FinalDamgeExtent;                                  // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               FinalDamageRotation;                               // 0x0054(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                FinalDamageLocation;                               // 0x0060(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSubSkillCollision                     LocalDamageCollision;                              // 0x006C(0x0028)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_Get_Target_Actors_OutActors;              // 0x0098(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_GetSurfaceType_ReturnValue;               // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValidOutputPin                               CallFunc_FindAkComponentWithValid_OutputPins;      // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1AkComponent*                         CallFunc_FindAkComponentWithValid_ReturnValue;     // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraComponent*>              CallFunc_SpawnFXsForAbilityToTarget_ReturnValue;   // 0x00D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1DataSoundEffects*                    K2Node_Select_Default;                             // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Default_Fist_C_DamageToEnemy) == 0x000008, "Wrong alignment on Default_Fist_C_DamageToEnemy");
static_assert(sizeof(Default_Fist_C_DamageToEnemy) == 0x000108, "Wrong size on Default_Fist_C_DamageToEnemy");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, AttackCount) == 0x000000, "Member 'Default_Fist_C_DamageToEnemy::AttackCount' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, InSetting) == 0x000008, "Member 'Default_Fist_C_DamageToEnemy::InSetting' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, AttackTag) == 0x000028, "Member 'Default_Fist_C_DamageToEnemy::AttackTag' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, FinalDamgeExtent) == 0x000048, "Member 'Default_Fist_C_DamageToEnemy::FinalDamgeExtent' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, FinalDamageRotation) == 0x000054, "Member 'Default_Fist_C_DamageToEnemy::FinalDamageRotation' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, FinalDamageLocation) == 0x000060, "Member 'Default_Fist_C_DamageToEnemy::FinalDamageLocation' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, LocalDamageCollision) == 0x00006C, "Member 'Default_Fist_C_DamageToEnemy::LocalDamageCollision' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, Temp_bool_Variable) == 0x000094, "Member 'Default_Fist_C_DamageToEnemy::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, CallFunc_Get_Target_Actors_OutActors) == 0x000098, "Member 'Default_Fist_C_DamageToEnemy::CallFunc_Get_Target_Actors_OutActors' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, Temp_int_Array_Index_Variable) == 0x0000A8, "Member 'Default_Fist_C_DamageToEnemy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, CallFunc_Array_Length_ReturnValue) == 0x0000AC, "Member 'Default_Fist_C_DamageToEnemy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'Default_Fist_C_DamageToEnemy::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'Default_Fist_C_DamageToEnemy::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, CallFunc_GetSurfaceType_ReturnValue) == 0x0000C4, "Member 'Default_Fist_C_DamageToEnemy::CallFunc_GetSurfaceType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, CallFunc_FindAkComponentWithValid_OutputPins) == 0x0000C5, "Member 'Default_Fist_C_DamageToEnemy::CallFunc_FindAkComponentWithValid_OutputPins' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, CallFunc_FindAkComponentWithValid_ReturnValue) == 0x0000C8, "Member 'Default_Fist_C_DamageToEnemy::CallFunc_FindAkComponentWithValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, CallFunc_SpawnFXsForAbilityToTarget_ReturnValue) == 0x0000D0, "Member 'Default_Fist_C_DamageToEnemy::CallFunc_SpawnFXsForAbilityToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, K2Node_SwitchEnum_CmpSuccess) == 0x0000E0, "Member 'Default_Fist_C_DamageToEnemy::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000E1, "Member 'Default_Fist_C_DamageToEnemy::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, Temp_int_Loop_Counter_Variable) == 0x0000E4, "Member 'Default_Fist_C_DamageToEnemy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x0000E8, "Member 'Default_Fist_C_DamageToEnemy::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, CallFunc_Less_IntInt_ReturnValue) == 0x0000E9, "Member 'Default_Fist_C_DamageToEnemy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, CallFunc_Add_IntInt_ReturnValue) == 0x0000EC, "Member 'Default_Fist_C_DamageToEnemy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, CallFunc_IsLocallyControlled_ReturnValue) == 0x0000F0, "Member 'Default_Fist_C_DamageToEnemy::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, K2Node_Select_Default) == 0x0000F8, "Member 'Default_Fist_C_DamageToEnemy::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_DamageToEnemy, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000100, "Member 'Default_Fist_C_DamageToEnemy::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.CheckValidateRadius
// 0x0080 (0x0080 - 0x0000)
struct Default_Fist_C_CheckValidateRadius final
{
public:
	class AActor*                                 InTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMaxElement_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_Origin_1;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent_1;               // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMaxElement_ReturnValue_1;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Default_Fist_C_CheckValidateRadius) == 0x000008, "Wrong alignment on Default_Fist_C_CheckValidateRadius");
static_assert(sizeof(Default_Fist_C_CheckValidateRadius) == 0x000080, "Wrong size on Default_Fist_C_CheckValidateRadius");
static_assert(offsetof(Default_Fist_C_CheckValidateRadius, InTarget) == 0x000000, "Member 'Default_Fist_C_CheckValidateRadius::InTarget' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CheckValidateRadius, ReturnValue) == 0x000008, "Member 'Default_Fist_C_CheckValidateRadius::ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CheckValidateRadius, CallFunc_GetOwnerActor_ReturnValue) == 0x000010, "Member 'Default_Fist_C_CheckValidateRadius::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CheckValidateRadius, CallFunc_GetActorBounds_Origin) == 0x000018, "Member 'Default_Fist_C_CheckValidateRadius::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CheckValidateRadius, CallFunc_GetActorBounds_BoxExtent) == 0x000024, "Member 'Default_Fist_C_CheckValidateRadius::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CheckValidateRadius, CallFunc_GetDistanceTo_ReturnValue) == 0x000030, "Member 'Default_Fist_C_CheckValidateRadius::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CheckValidateRadius, CallFunc_GetMaxElement_ReturnValue) == 0x000038, "Member 'Default_Fist_C_CheckValidateRadius::CallFunc_GetMaxElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CheckValidateRadius, CallFunc_GetActorBounds_Origin_1) == 0x000040, "Member 'Default_Fist_C_CheckValidateRadius::CallFunc_GetActorBounds_Origin_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CheckValidateRadius, CallFunc_GetActorBounds_BoxExtent_1) == 0x00004C, "Member 'Default_Fist_C_CheckValidateRadius::CallFunc_GetActorBounds_BoxExtent_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CheckValidateRadius, CallFunc_GetMaxElement_ReturnValue_1) == 0x000058, "Member 'Default_Fist_C_CheckValidateRadius::CallFunc_GetMaxElement_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CheckValidateRadius, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'Default_Fist_C_CheckValidateRadius::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CheckValidateRadius, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Default_Fist_C_CheckValidateRadius::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CheckValidateRadius, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000070, "Member 'Default_Fist_C_CheckValidateRadius::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CheckValidateRadius, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000078, "Member 'Default_Fist_C_CheckValidateRadius::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.CalcValidateTolerance
// 0x00E8 (0x00E8 - 0x0000)
struct Default_Fist_C_CalcValidateTolerance final
{
public:
	double                                        OutValidateRadius;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Result;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSubSkillSetting                       Setting;                                           // 0x0010(0x0020)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSubSkillCollision                     CallFunc_Array_Get_Item;                           // 0x0048(0x0028)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMaxElement_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EM1PlayerAnimType                             CallFunc_GetPlayerAnimType_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSubSkillSetting                       CallFunc_Map_Find_Value;                           // 0x0098(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSubSkillSetting                       CallFunc_Map_Find_Value_1;                         // 0x00C0(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Default_Fist_C_CalcValidateTolerance) == 0x000008, "Wrong alignment on Default_Fist_C_CalcValidateTolerance");
static_assert(sizeof(Default_Fist_C_CalcValidateTolerance) == 0x0000E8, "Wrong size on Default_Fist_C_CalcValidateTolerance");
static_assert(offsetof(Default_Fist_C_CalcValidateTolerance, OutValidateRadius) == 0x000000, "Member 'Default_Fist_C_CalcValidateTolerance::OutValidateRadius' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcValidateTolerance, Result) == 0x000008, "Member 'Default_Fist_C_CalcValidateTolerance::Result' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcValidateTolerance, Setting) == 0x000010, "Member 'Default_Fist_C_CalcValidateTolerance::Setting' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcValidateTolerance, Temp_int_Array_Index_Variable) == 0x000030, "Member 'Default_Fist_C_CalcValidateTolerance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcValidateTolerance, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'Default_Fist_C_CalcValidateTolerance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcValidateTolerance, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'Default_Fist_C_CalcValidateTolerance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcValidateTolerance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'Default_Fist_C_CalcValidateTolerance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcValidateTolerance, CallFunc_Array_Get_Item) == 0x000048, "Member 'Default_Fist_C_CalcValidateTolerance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcValidateTolerance, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'Default_Fist_C_CalcValidateTolerance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcValidateTolerance, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'Default_Fist_C_CalcValidateTolerance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcValidateTolerance, CallFunc_GetMaxElement_ReturnValue) == 0x000078, "Member 'Default_Fist_C_CalcValidateTolerance::CallFunc_GetMaxElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcValidateTolerance, CallFunc_FMax_ReturnValue) == 0x000080, "Member 'Default_Fist_C_CalcValidateTolerance::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcValidateTolerance, CallFunc_GetOwnerActor_ReturnValue) == 0x000088, "Member 'Default_Fist_C_CalcValidateTolerance::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcValidateTolerance, CallFunc_GetPlayerAnimType_ReturnValue) == 0x000090, "Member 'Default_Fist_C_CalcValidateTolerance::CallFunc_GetPlayerAnimType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcValidateTolerance, CallFunc_Map_Find_Value) == 0x000098, "Member 'Default_Fist_C_CalcValidateTolerance::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcValidateTolerance, CallFunc_Map_Find_ReturnValue) == 0x0000B8, "Member 'Default_Fist_C_CalcValidateTolerance::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcValidateTolerance, CallFunc_Map_Find_Value_1) == 0x0000C0, "Member 'Default_Fist_C_CalcValidateTolerance::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcValidateTolerance, CallFunc_Map_Find_ReturnValue_1) == 0x0000E0, "Member 'Default_Fist_C_CalcValidateTolerance::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.BP_OnDeactivated
// 0x0001 (0x0001 - 0x0000)
struct Default_Fist_C_BP_OnDeactivated final
{
public:
	bool                                          bCancelled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Default_Fist_C_BP_OnDeactivated) == 0x000001, "Wrong alignment on Default_Fist_C_BP_OnDeactivated");
static_assert(sizeof(Default_Fist_C_BP_OnDeactivated) == 0x000001, "Wrong size on Default_Fist_C_BP_OnDeactivated");
static_assert(offsetof(Default_Fist_C_BP_OnDeactivated, bCancelled) == 0x000000, "Member 'Default_Fist_C_BP_OnDeactivated::bCancelled' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.MakeSkillActivateParams
// 0x0200 (0x0200 - 0x0000)
struct Default_Fist_C_MakeSkillActivateParams final
{
public:
	const class AActor*                           InOwner;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FM1AbilityParamData>            ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm)
	class AActor*                                 AimedTarget;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<struct FM1AbilityParamData>            ActiveParams;                                      // 0x0020(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_CheckPlayerActiveSkillCoolTime_ReturnValue; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityParamData                    CallFunc_AbilityContextMakeBoolParam_ReturnValue;  // 0x0038(0x0020)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcAttackDirection_ReturnValue;          // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDashLocation_TargetLocation;           // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityParamData                    CallFunc_AbilityContextMakeVectorParam_ReturnValue; // 0x0078(0x0020)()
	struct FVector                                CallFunc_ZeroRebaseVec_ReturnValue;                // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityParamData                    CallFunc_AbilityContextMakeVectorParam_ReturnValue_1; // 0x00A8(0x0020)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityParamData                    CallFunc_AbilityContextMakeVectorParam_ReturnValue_2; // 0x00D8(0x0020)()
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FM1AbilityParamData                    K2Node_MakeStruct_M1AbilityParamData;              // 0x0110(0x0020)()
	bool                                          CallFunc_IsActiveTag_ReturnValue;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveTag_ReturnValue_1;                // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_1;          // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_2;          // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FM1AbilityParamData                    K2Node_MakeStruct_M1AbilityParamData_1;            // 0x0158(0x0020)()
	struct FM1AbilityParamData                    K2Node_MakeStruct_M1AbilityParamData_2;            // 0x0178(0x0020)()
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOwnerLocation_ReturnValue;             // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_3;          // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityParamData                    K2Node_MakeStruct_M1AbilityParamData_3;            // 0x01D0(0x0020)()
	class AActor*                                 CallFunc_GetAimedTarget_AimedActor;                // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_7;                  // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Default_Fist_C_MakeSkillActivateParams) == 0x000008, "Wrong alignment on Default_Fist_C_MakeSkillActivateParams");
static_assert(sizeof(Default_Fist_C_MakeSkillActivateParams) == 0x000200, "Wrong size on Default_Fist_C_MakeSkillActivateParams");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, InOwner) == 0x000000, "Member 'Default_Fist_C_MakeSkillActivateParams::InOwner' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, ReturnValue) == 0x000008, "Member 'Default_Fist_C_MakeSkillActivateParams::ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, AimedTarget) == 0x000018, "Member 'Default_Fist_C_MakeSkillActivateParams::AimedTarget' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, ActiveParams) == 0x000020, "Member 'Default_Fist_C_MakeSkillActivateParams::ActiveParams' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_CheckPlayerActiveSkillCoolTime_ReturnValue) == 0x000030, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_CheckPlayerActiveSkillCoolTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_AbilityContextMakeBoolParam_ReturnValue) == 0x000038, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_AbilityContextMakeBoolParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_CalcAttackDirection_ReturnValue) == 0x00005C, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_CalcAttackDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_GetDashLocation_TargetLocation) == 0x000068, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_GetDashLocation_TargetLocation' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_AbilityContextMakeVectorParam_ReturnValue) == 0x000078, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_AbilityContextMakeVectorParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_ZeroRebaseVec_ReturnValue) == 0x000098, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_ZeroRebaseVec_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_Array_Add_ReturnValue_1) == 0x0000A4, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_AbilityContextMakeVectorParam_ReturnValue_1) == 0x0000A8, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_AbilityContextMakeVectorParam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_GetVelocity_ReturnValue) == 0x0000CC, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_AbilityContextMakeVectorParam_ReturnValue_2) == 0x0000D8, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_AbilityContextMakeVectorParam_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_Array_Add_ReturnValue_2) == 0x0000F8, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_Conv_BoolToString_ReturnValue) == 0x000100, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, K2Node_MakeStruct_M1AbilityParamData) == 0x000110, "Member 'Default_Fist_C_MakeSkillActivateParams::K2Node_MakeStruct_M1AbilityParamData' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_IsActiveTag_ReturnValue) == 0x000130, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_IsActiveTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_IsActiveTag_ReturnValue_1) == 0x000131, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_IsActiveTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_Conv_BoolToString_ReturnValue_1) == 0x000138, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_Conv_BoolToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_Conv_BoolToString_ReturnValue_2) == 0x000148, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_Conv_BoolToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, K2Node_MakeStruct_M1AbilityParamData_1) == 0x000158, "Member 'Default_Fist_C_MakeSkillActivateParams::K2Node_MakeStruct_M1AbilityParamData_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, K2Node_MakeStruct_M1AbilityParamData_2) == 0x000178, "Member 'Default_Fist_C_MakeSkillActivateParams::K2Node_MakeStruct_M1AbilityParamData_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_Array_Add_ReturnValue_3) == 0x000198, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_GetOwnerLocation_ReturnValue) == 0x00019C, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_GetOwnerLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_Vector_Distance_ReturnValue) == 0x0001A8, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_Array_Add_ReturnValue_4) == 0x0001B0, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0001B4, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_Conv_BoolToString_ReturnValue_3) == 0x0001B8, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_Conv_BoolToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_Array_Add_ReturnValue_5) == 0x0001C8, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, K2Node_MakeStruct_M1AbilityParamData_3) == 0x0001D0, "Member 'Default_Fist_C_MakeSkillActivateParams::K2Node_MakeStruct_M1AbilityParamData_3' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_GetAimedTarget_AimedActor) == 0x0001F0, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_GetAimedTarget_AimedActor' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_Array_Add_ReturnValue_6) == 0x0001F8, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_MakeSkillActivateParams, CallFunc_Array_Add_ReturnValue_7) == 0x0001FC, "Member 'Default_Fist_C_MakeSkillActivateParams::CallFunc_Array_Add_ReturnValue_7' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.GetDashLocation
// 0x0118 (0x0118 - 0x0000)
struct Default_Fist_C_GetDashLocation final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOwnerLocation_ReturnValue;             // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetOwnerLocation_ReturnValue_1;           // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Default_Fist_C_GetDashLocation) == 0x000008, "Wrong alignment on Default_Fist_C_GetDashLocation");
static_assert(sizeof(Default_Fist_C_GetDashLocation) == 0x000118, "Wrong size on Default_Fist_C_GetDashLocation");
static_assert(offsetof(Default_Fist_C_GetDashLocation, TargetActor) == 0x000000, "Member 'Default_Fist_C_GetDashLocation::TargetActor' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, TargetLocation) == 0x000008, "Member 'Default_Fist_C_GetDashLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'Default_Fist_C_GetDashLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000020, "Member 'Default_Fist_C_GetDashLocation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_GetOwnerLocation_ReturnValue) == 0x00002C, "Member 'Default_Fist_C_GetDashLocation::CallFunc_GetOwnerLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_GetOwnerActor_ReturnValue) == 0x000038, "Member 'Default_Fist_C_GetDashLocation::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_BreakVector_X) == 0x000040, "Member 'Default_Fist_C_GetDashLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_BreakVector_Y) == 0x000048, "Member 'Default_Fist_C_GetDashLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_BreakVector_Z) == 0x000050, "Member 'Default_Fist_C_GetDashLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000058, "Member 'Default_Fist_C_GetDashLocation::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_GetOwnerLocation_ReturnValue_1) == 0x000060, "Member 'Default_Fist_C_GetDashLocation::CallFunc_GetOwnerLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_GetComponentBounds_Origin) == 0x00006C, "Member 'Default_Fist_C_GetDashLocation::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_GetComponentBounds_BoxExtent) == 0x000078, "Member 'Default_Fist_C_GetDashLocation::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_GetComponentBounds_SphereRadius) == 0x000084, "Member 'Default_Fist_C_GetDashLocation::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000088, "Member 'Default_Fist_C_GetDashLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000098, "Member 'Default_Fist_C_GetDashLocation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_BreakVector_X_1) == 0x0000A0, "Member 'Default_Fist_C_GetDashLocation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_BreakVector_Y_1) == 0x0000A8, "Member 'Default_Fist_C_GetDashLocation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_BreakVector_Z_1) == 0x0000B0, "Member 'Default_Fist_C_GetDashLocation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_MakeVector_ReturnValue) == 0x0000B8, "Member 'Default_Fist_C_GetDashLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_Normal_ReturnValue) == 0x0000C4, "Member 'Default_Fist_C_GetDashLocation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000D0, "Member 'Default_Fist_C_GetDashLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x0000DC, "Member 'Default_Fist_C_GetDashLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_BreakVector_X_2) == 0x0000E8, "Member 'Default_Fist_C_GetDashLocation::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_BreakVector_Y_2) == 0x0000F0, "Member 'Default_Fist_C_GetDashLocation::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_BreakVector_Z_2) == 0x0000F8, "Member 'Default_Fist_C_GetDashLocation::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_MakeVector_ReturnValue_1) == 0x000100, "Member 'Default_Fist_C_GetDashLocation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetDashLocation, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000110, "Member 'Default_Fist_C_GetDashLocation::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.GetAimedTarget
// 0x0110 (0x0110 - 0x0000)
struct Default_Fist_C_GetAimedTarget final
{
public:
	class AActor*                                 AimedActor;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x000C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_X;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Y;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Z;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSubSkillTargetDetectRectYRatio_ReturnValue; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSubSkillTargetDetectRectXRatio_ReturnValue; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_1;              // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Player*                              K2Node_DynamicCast_AsM1Player;                     // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_FindActorsInSelectedScreenRect_OutActors; // 0x0080(0x0010)(ReferenceParm)
	bool                                          CallFunc_FindActorsInSelectedScreenRect_ReturnValue; // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_SortActorsByDistance_ReturnValue;         // 0x0098(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector3f_X_1;                        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Y_1;                        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Z_1;                        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindActorsInSelectedScreenRect_InMaxDistance_ImplicitCast; // 0x0100(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Default_Fist_C_GetAimedTarget) == 0x000008, "Wrong alignment on Default_Fist_C_GetAimedTarget");
static_assert(sizeof(Default_Fist_C_GetAimedTarget) == 0x000110, "Wrong size on Default_Fist_C_GetAimedTarget");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, AimedActor) == 0x000000, "Member 'Default_Fist_C_GetAimedTarget::AimedActor' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Default_Fist_C_GetAimedTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, Temp_struct_Variable) == 0x00000C, "Member 'Default_Fist_C_GetAimedTarget::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_GetOwnerActor_ReturnValue) == 0x000018, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'Default_Fist_C_GetAimedTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_BreakVector3f_X) == 0x000030, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_BreakVector3f_X' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_BreakVector3f_Y) == 0x000034, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_BreakVector3f_Y' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_BreakVector3f_Z) == 0x000038, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_BreakVector3f_Z' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000040, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_GetSubSkillTargetDetectRectYRatio_ReturnValue) == 0x000048, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_GetSubSkillTargetDetectRectYRatio_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_GetSubSkillTargetDetectRectXRatio_ReturnValue) == 0x00004C, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_GetSubSkillTargetDetectRectXRatio_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_MakeVector2D_ReturnValue) == 0x000050, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_GetViewportSize_ReturnValue) == 0x000058, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000060, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_GetOwnerActor_ReturnValue_1) == 0x000068, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_GetOwnerActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, K2Node_DynamicCast_AsM1Player) == 0x000070, "Member 'Default_Fist_C_GetAimedTarget::K2Node_DynamicCast_AsM1Player' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'Default_Fist_C_GetAimedTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_FindActorsInSelectedScreenRect_OutActors) == 0x000080, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_FindActorsInSelectedScreenRect_OutActors' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_FindActorsInSelectedScreenRect_ReturnValue) == 0x000090, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_FindActorsInSelectedScreenRect_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_SortActorsByDistance_ReturnValue) == 0x000098, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_SortActorsByDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000B4, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_BreakVector3f_X_1) == 0x0000C4, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_BreakVector3f_X_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_BreakVector3f_Y_1) == 0x0000C8, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_BreakVector3f_Y_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_BreakVector3f_Z_1) == 0x0000CC, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_BreakVector3f_Z_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_Abs_ReturnValue) == 0x0000D8, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0000E8, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x0000F0, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_MakeVector2D_X_ImplicitCast) == 0x0000F8, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_FindActorsInSelectedScreenRect_InMaxDistance_ImplicitCast) == 0x000100, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_FindActorsInSelectedScreenRect_InMaxDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_GetAimedTarget, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000108, "Member 'Default_Fist_C_GetAimedTarget::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.CheckCoolTimeInAbility
// 0x0001 (0x0001 - 0x0000)
struct Default_Fist_C_CheckCoolTimeInAbility final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Default_Fist_C_CheckCoolTimeInAbility) == 0x000001, "Wrong alignment on Default_Fist_C_CheckCoolTimeInAbility");
static_assert(sizeof(Default_Fist_C_CheckCoolTimeInAbility) == 0x000001, "Wrong size on Default_Fist_C_CheckCoolTimeInAbility");
static_assert(offsetof(Default_Fist_C_CheckCoolTimeInAbility, ReturnValue) == 0x000000, "Member 'Default_Fist_C_CheckCoolTimeInAbility::ReturnValue' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.CalcAttackDirection
// 0x00E8 (0x00E8 - 0x0000)
struct Default_Fist_C_CalcAttackDirection final
{
public:
	class AActor*                                 InOwner;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InTarget;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Yaw;                                               // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_As_;                            // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorEyesViewPoint_OutLocation;        // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetActorEyesViewPoint_OutRotation;        // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Default_Fist_C_CalcAttackDirection) == 0x000008, "Wrong alignment on Default_Fist_C_CalcAttackDirection");
static_assert(sizeof(Default_Fist_C_CalcAttackDirection) == 0x0000E8, "Wrong size on Default_Fist_C_CalcAttackDirection");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, InOwner) == 0x000000, "Member 'Default_Fist_C_CalcAttackDirection::InOwner' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, InTarget) == 0x000008, "Member 'Default_Fist_C_CalcAttackDirection::InTarget' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, ReturnValue) == 0x000010, "Member 'Default_Fist_C_CalcAttackDirection::ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, Yaw) == 0x00001C, "Member 'Default_Fist_C_CalcAttackDirection::Yaw' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, Rotation) == 0x000020, "Member 'Default_Fist_C_CalcAttackDirection::Rotation' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'Default_Fist_C_CalcAttackDirection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'Default_Fist_C_CalcAttackDirection::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00003C, "Member 'Default_Fist_C_CalcAttackDirection::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000048, "Member 'Default_Fist_C_CalcAttackDirection::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000054, "Member 'Default_Fist_C_CalcAttackDirection::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, CallFunc_Normal_ReturnValue) == 0x000060, "Member 'Default_Fist_C_CalcAttackDirection::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, CallFunc_MakeRotFromX_ReturnValue) == 0x00006C, "Member 'Default_Fist_C_CalcAttackDirection::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, CallFunc_BreakRotator_Roll) == 0x000078, "Member 'Default_Fist_C_CalcAttackDirection::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, CallFunc_BreakRotator_Pitch) == 0x00007C, "Member 'Default_Fist_C_CalcAttackDirection::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, CallFunc_BreakRotator_Yaw) == 0x000080, "Member 'Default_Fist_C_CalcAttackDirection::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, K2Node_DynamicCast_As_) == 0x000088, "Member 'Default_Fist_C_CalcAttackDirection::K2Node_DynamicCast_As_' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'Default_Fist_C_CalcAttackDirection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000094, "Member 'Default_Fist_C_CalcAttackDirection::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, CallFunc_GetController_ReturnValue) == 0x0000A0, "Member 'Default_Fist_C_CalcAttackDirection::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, CallFunc_BreakRotator_Roll_1) == 0x0000A8, "Member 'Default_Fist_C_CalcAttackDirection::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, CallFunc_BreakRotator_Pitch_1) == 0x0000AC, "Member 'Default_Fist_C_CalcAttackDirection::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, CallFunc_BreakRotator_Yaw_1) == 0x0000B0, "Member 'Default_Fist_C_CalcAttackDirection::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, CallFunc_GetActorEyesViewPoint_OutLocation) == 0x0000B4, "Member 'Default_Fist_C_CalcAttackDirection::CallFunc_GetActorEyesViewPoint_OutLocation' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, CallFunc_GetActorEyesViewPoint_OutRotation) == 0x0000C0, "Member 'Default_Fist_C_CalcAttackDirection::CallFunc_GetActorEyesViewPoint_OutRotation' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, CallFunc_MakeRotator_ReturnValue) == 0x0000CC, "Member 'Default_Fist_C_CalcAttackDirection::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, CallFunc_BreakRotator_Roll_2) == 0x0000D8, "Member 'Default_Fist_C_CalcAttackDirection::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, CallFunc_BreakRotator_Pitch_2) == 0x0000DC, "Member 'Default_Fist_C_CalcAttackDirection::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_CalcAttackDirection, CallFunc_BreakRotator_Yaw_2) == 0x0000E0, "Member 'Default_Fist_C_CalcAttackDirection::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");

// Function Default_Fist.Default_Fist_C.BP_MakePreloadAssetList
// 0x0178 (0x0178 - 0x0000)
struct Default_Fist_C_BP_MakePreloadAssetList final
{
public:
	struct FM1AbilityAssetPreload                 OutAbilityAssetPreload;                            // 0x0000(0x0040)(Parm, OutParm)
	TArray<struct FSoftObjectPath>                AssetsForLoad;                                     // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        CallFunc_GetSoftObjectPath_ReturnValue;            // 0x0060(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	struct FM1AbilityAssetPreload                 K2Node_MakeStruct_M1AbilityAssetPreload;           // 0x0080(0x0040)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        CallFunc_GetSoftObjectPath_ReturnValue_1;          // 0x00C8(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSubSkillSetting>               CallFunc_Map_Values_Values;                        // 0x00F0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSubSkillSetting                       CallFunc_Array_Get_Item;                           // 0x0108(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSoftObjectPath                        CallFunc_GetSoftObjectPath_ReturnValue_2;          // 0x0130(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        CallFunc_GetSoftObjectPath_ReturnValue_3;          // 0x0150(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Default_Fist_C_BP_MakePreloadAssetList) == 0x000008, "Wrong alignment on Default_Fist_C_BP_MakePreloadAssetList");
static_assert(sizeof(Default_Fist_C_BP_MakePreloadAssetList) == 0x000178, "Wrong size on Default_Fist_C_BP_MakePreloadAssetList");
static_assert(offsetof(Default_Fist_C_BP_MakePreloadAssetList, OutAbilityAssetPreload) == 0x000000, "Member 'Default_Fist_C_BP_MakePreloadAssetList::OutAbilityAssetPreload' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_BP_MakePreloadAssetList, AssetsForLoad) == 0x000040, "Member 'Default_Fist_C_BP_MakePreloadAssetList::AssetsForLoad' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_BP_MakePreloadAssetList, Temp_int_Array_Index_Variable) == 0x000050, "Member 'Default_Fist_C_BP_MakePreloadAssetList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_BP_MakePreloadAssetList, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'Default_Fist_C_BP_MakePreloadAssetList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_BP_MakePreloadAssetList, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'Default_Fist_C_BP_MakePreloadAssetList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_BP_MakePreloadAssetList, CallFunc_GetSoftObjectPath_ReturnValue) == 0x000060, "Member 'Default_Fist_C_BP_MakePreloadAssetList::CallFunc_GetSoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_BP_MakePreloadAssetList, K2Node_MakeStruct_M1AbilityAssetPreload) == 0x000080, "Member 'Default_Fist_C_BP_MakePreloadAssetList::K2Node_MakeStruct_M1AbilityAssetPreload' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_BP_MakePreloadAssetList, CallFunc_Array_Add_ReturnValue) == 0x0000C0, "Member 'Default_Fist_C_BP_MakePreloadAssetList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_BP_MakePreloadAssetList, CallFunc_GetSoftObjectPath_ReturnValue_1) == 0x0000C8, "Member 'Default_Fist_C_BP_MakePreloadAssetList::CallFunc_GetSoftObjectPath_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_BP_MakePreloadAssetList, CallFunc_Array_Add_ReturnValue_1) == 0x0000E8, "Member 'Default_Fist_C_BP_MakePreloadAssetList::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_BP_MakePreloadAssetList, CallFunc_Map_Values_Values) == 0x0000F0, "Member 'Default_Fist_C_BP_MakePreloadAssetList::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_BP_MakePreloadAssetList, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'Default_Fist_C_BP_MakePreloadAssetList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_BP_MakePreloadAssetList, CallFunc_Array_Get_Item) == 0x000108, "Member 'Default_Fist_C_BP_MakePreloadAssetList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_BP_MakePreloadAssetList, CallFunc_Less_IntInt_ReturnValue) == 0x000128, "Member 'Default_Fist_C_BP_MakePreloadAssetList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_BP_MakePreloadAssetList, CallFunc_GetSoftObjectPath_ReturnValue_2) == 0x000130, "Member 'Default_Fist_C_BP_MakePreloadAssetList::CallFunc_GetSoftObjectPath_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_BP_MakePreloadAssetList, CallFunc_GetSoftObjectPath_ReturnValue_3) == 0x000150, "Member 'Default_Fist_C_BP_MakePreloadAssetList::CallFunc_GetSoftObjectPath_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_BP_MakePreloadAssetList, CallFunc_Array_Add_ReturnValue_2) == 0x000170, "Member 'Default_Fist_C_BP_MakePreloadAssetList::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Default_Fist_C_BP_MakePreloadAssetList, CallFunc_Array_Add_ReturnValue_3) == 0x000174, "Member 'Default_Fist_C_BP_MakePreloadAssetList::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");

}

