#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PrologueBunny

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "M1_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "M1Data_structs.hpp"
#include "MovieScene_structs.hpp"


namespace SDK::Params
{

// Function PrologueBunny.PrologueBunny_C.StopLookBack
// 0x0010 (0x0010 - 0x0000)
struct PrologueBunny_C_StopLookBack final
{
public:
	class UAnimMontage*                           CallFunc_Map_Find_Value;                           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_StopLookBack) == 0x000008, "Wrong alignment on PrologueBunny_C_StopLookBack");
static_assert(sizeof(PrologueBunny_C_StopLookBack) == 0x000010, "Wrong size on PrologueBunny_C_StopLookBack");
static_assert(offsetof(PrologueBunny_C_StopLookBack, CallFunc_Map_Find_Value) == 0x000000, "Member 'PrologueBunny_C_StopLookBack::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_StopLookBack, CallFunc_Map_Find_ReturnValue) == 0x000008, "Member 'PrologueBunny_C_StopLookBack::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.StartMoveAlongPath
// 0x0030 (0x0030 - 0x0000)
struct PrologueBunny_C_StartMoveAlongPath final
{
public:
	class FName                                   PathName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisablePause;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bArriveExactly;                                    // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCompleteOnPlayerApproached;                       // 0x000A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLookAtPlayerOnPause;                              // 0x000B(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APrologueBunnyPath_C*>           CallFunc_GetAllActorsOfClassWithTag_OutActors;     // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APrologueBunnyPath_C*                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_StartMoveAlongPath) == 0x000008, "Wrong alignment on PrologueBunny_C_StartMoveAlongPath");
static_assert(sizeof(PrologueBunny_C_StartMoveAlongPath) == 0x000030, "Wrong size on PrologueBunny_C_StartMoveAlongPath");
static_assert(offsetof(PrologueBunny_C_StartMoveAlongPath, PathName) == 0x000000, "Member 'PrologueBunny_C_StartMoveAlongPath::PathName' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_StartMoveAlongPath, bDisablePause) == 0x000008, "Member 'PrologueBunny_C_StartMoveAlongPath::bDisablePause' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_StartMoveAlongPath, bArriveExactly) == 0x000009, "Member 'PrologueBunny_C_StartMoveAlongPath::bArriveExactly' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_StartMoveAlongPath, bCompleteOnPlayerApproached) == 0x00000A, "Member 'PrologueBunny_C_StartMoveAlongPath::bCompleteOnPlayerApproached' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_StartMoveAlongPath, bLookAtPlayerOnPause) == 0x00000B, "Member 'PrologueBunny_C_StartMoveAlongPath::bLookAtPlayerOnPause' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_StartMoveAlongPath, CallFunc_GetAllActorsOfClassWithTag_OutActors) == 0x000010, "Member 'PrologueBunny_C_StartMoveAlongPath::CallFunc_GetAllActorsOfClassWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_StartMoveAlongPath, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'PrologueBunny_C_StartMoveAlongPath::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_StartMoveAlongPath, CallFunc_Array_Get_Item) == 0x000028, "Member 'PrologueBunny_C_StartMoveAlongPath::CallFunc_Array_Get_Item' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.StartBossBattle
// 0x00E8 (0x00E8 - 0x0000)
struct PrologueBunny_C_StartBossBattle final
{
public:
	struct FM1ScaledInteger                       CallFunc_FromInt_ReturnValue;                      // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	TMap<EM1StatType, struct FM1ScaledInteger>    K2Node_MakeMap_Map;                                // 0x0008(0x0050)(ConstParm)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	TMap<class FName, EM1EquipmentSlotType>       K2Node_MakeMap_Map_1;                              // 0x0068(0x0050)(ConstParm)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AM1EpicMonster*                         CallFunc_GetActorOfClass_ReturnValue;              // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_Max_ImplicitCast;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_Min_ImplicitCast;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast_1;          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_StartBossBattle) == 0x000008, "Wrong alignment on PrologueBunny_C_StartBossBattle");
static_assert(sizeof(PrologueBunny_C_StartBossBattle) == 0x0000E8, "Wrong size on PrologueBunny_C_StartBossBattle");
static_assert(offsetof(PrologueBunny_C_StartBossBattle, CallFunc_FromInt_ReturnValue) == 0x000000, "Member 'PrologueBunny_C_StartBossBattle::CallFunc_FromInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_StartBossBattle, K2Node_MakeMap_Map) == 0x000008, "Member 'PrologueBunny_C_StartBossBattle::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_StartBossBattle, CallFunc_RandomFloatInRange_ReturnValue) == 0x000058, "Member 'PrologueBunny_C_StartBossBattle::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_StartBossBattle, CallFunc_K2_SetTimer_ReturnValue) == 0x000060, "Member 'PrologueBunny_C_StartBossBattle::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_StartBossBattle, K2Node_MakeMap_Map_1) == 0x000068, "Member 'PrologueBunny_C_StartBossBattle::K2Node_MakeMap_Map_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_StartBossBattle, CallFunc_K2_SetTimer_ReturnValue_1) == 0x0000B8, "Member 'PrologueBunny_C_StartBossBattle::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_StartBossBattle, CallFunc_GetActorOfClass_ReturnValue) == 0x0000C0, "Member 'PrologueBunny_C_StartBossBattle::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_StartBossBattle, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'PrologueBunny_C_StartBossBattle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_StartBossBattle, CallFunc_RandomFloatInRange_Max_ImplicitCast) == 0x0000D0, "Member 'PrologueBunny_C_StartBossBattle::CallFunc_RandomFloatInRange_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_StartBossBattle, CallFunc_RandomFloatInRange_Min_ImplicitCast) == 0x0000D8, "Member 'PrologueBunny_C_StartBossBattle::CallFunc_RandomFloatInRange_Min_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_StartBossBattle, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x0000E0, "Member 'PrologueBunny_C_StartBossBattle::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_StartBossBattle, CallFunc_K2_SetTimer_Time_ImplicitCast_1) == 0x0000E4, "Member 'PrologueBunny_C_StartBossBattle::CallFunc_K2_SetTimer_Time_ImplicitCast_1' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.SelectNextEpicMonsterFightMove
// 0x0018 (0x0018 - 0x0000)
struct PrologueBunny_C_SelectNextEpicMonsterFightMove final
{
public:
	class FString                                 OutMoveKey;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_SelectNextEpicMonsterFightMove) == 0x000008, "Wrong alignment on PrologueBunny_C_SelectNextEpicMonsterFightMove");
static_assert(sizeof(PrologueBunny_C_SelectNextEpicMonsterFightMove) == 0x000018, "Wrong size on PrologueBunny_C_SelectNextEpicMonsterFightMove");
static_assert(offsetof(PrologueBunny_C_SelectNextEpicMonsterFightMove, OutMoveKey) == 0x000000, "Member 'PrologueBunny_C_SelectNextEpicMonsterFightMove::OutMoveKey' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_SelectNextEpicMonsterFightMove, CallFunc_RandomBool_ReturnValue) == 0x000010, "Member 'PrologueBunny_C_SelectNextEpicMonsterFightMove::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_SelectNextEpicMonsterFightMove, K2Node_SwitchString_CmpSuccess) == 0x000011, "Member 'PrologueBunny_C_SelectNextEpicMonsterFightMove::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_SelectNextEpicMonsterFightMove, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000012, "Member 'PrologueBunny_C_SelectNextEpicMonsterFightMove::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.ResetDialogSetting
// 0x0001 (0x0001 - 0x0000)
struct PrologueBunny_C_ResetDialogSetting final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_ResetDialogSetting) == 0x000001, "Wrong alignment on PrologueBunny_C_ResetDialogSetting");
static_assert(sizeof(PrologueBunny_C_ResetDialogSetting) == 0x000001, "Wrong size on PrologueBunny_C_ResetDialogSetting");
static_assert(offsetof(PrologueBunny_C_ResetDialogSetting, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'PrologueBunny_C_ResetDialogSetting::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PrologueBunny_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_ReceiveTick) == 0x000004, "Wrong alignment on PrologueBunny_C_ReceiveTick");
static_assert(sizeof(PrologueBunny_C_ReceiveTick) == 0x000004, "Wrong size on PrologueBunny_C_ReceiveTick");
static_assert(offsetof(PrologueBunny_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PrologueBunny_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.PlayLookBack
// 0x00F8 (0x00F8 - 0x0000)
struct PrologueBunny_C_PlayLookBack final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FM1PlayDialogContext                   K2Node_MakeStruct_M1PlayDialogContext;             // 0x0028(0x0010)(NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Map_Find_Value;                           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontage_ReturnValue_1;            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value_1;                         // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_PlayLookBack) == 0x000008, "Wrong alignment on PrologueBunny_C_PlayLookBack");
static_assert(sizeof(PrologueBunny_C_PlayLookBack) == 0x0000F8, "Wrong size on PrologueBunny_C_PlayLookBack");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, Temp_bool_Variable) == 0x000000, "Member 'PrologueBunny_C_PlayLookBack::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, Temp_name_Variable) == 0x000004, "Member 'PrologueBunny_C_PlayLookBack::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, Temp_name_Variable_1) == 0x00000C, "Member 'PrologueBunny_C_PlayLookBack::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_PlayAnimMontage_ReturnValue) == 0x000014, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, K2Node_SwitchName_CmpSuccess) == 0x000018, "Member 'PrologueBunny_C_PlayLookBack::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00001C, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, K2Node_MakeStruct_M1PlayDialogContext) == 0x000028, "Member 'PrologueBunny_C_PlayLookBack::K2Node_MakeStruct_M1PlayDialogContext' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_GetActorRightVector_ReturnValue) == 0x000040, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_K2_GetPawn_ReturnValue) == 0x000050, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_BreakVector_X) == 0x000058, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_BreakVector_Y) == 0x000060, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_BreakVector_Z) == 0x000068, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000070, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_MakeVector_ReturnValue) == 0x00007C, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000088, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_BreakVector_X_1) == 0x000098, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_BreakVector_Y_1) == 0x0000A0, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_BreakVector_Z_1) == 0x0000A8, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_MakeVector_ReturnValue_1) == 0x0000B0, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_Map_Find_Value) == 0x0000C0, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_Map_Find_ReturnValue) == 0x0000C8, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000D0, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_PlayAnimMontage_ReturnValue_1) == 0x0000D8, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_PlayAnimMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000DC, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_IsValid_ReturnValue) == 0x0000DD, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, K2Node_Select_Default) == 0x0000E0, "Member 'PrologueBunny_C_PlayLookBack::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_Map_Remove_ReturnValue) == 0x0000E8, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_Map_Find_Value_1) == 0x0000EC, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayLookBack, CallFunc_Map_Find_ReturnValue_1) == 0x0000F4, "Member 'PrologueBunny_C_PlayLookBack::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.PlayEpicMonsterFightMoveSequence
// 0x0128 (0x0128 - 0x0000)
struct PrologueBunny_C_PlayEpicMonsterFightMoveSequence final
{
public:
	struct FSoftObjectPath                        NextMoveSequence;                                  // 0x0000(0x0020)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FMovieSceneSequencePlaybackSettings    K2Node_MakeStruct_MovieSceneSequencePlaybackSettings; // 0x0020(0x0024)(NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1SequencePlayBackSettings            K2Node_MakeStruct_M1SequencePlayBackSettings;      // 0x0048(0x0078)()
	class AM1LevelSequenceActor*                  CallFunc_CreateLevelSequenceActor_ReturnValue;     // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectNextEpicMonsterFightMove_OutMoveKey; // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        CallFunc_Map_Find_Value;                           // 0x00D8(0x0020)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0108(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_Max_ImplicitCast;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_Min_ImplicitCast;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_PlayEpicMonsterFightMoveSequence) == 0x000008, "Wrong alignment on PrologueBunny_C_PlayEpicMonsterFightMoveSequence");
static_assert(sizeof(PrologueBunny_C_PlayEpicMonsterFightMoveSequence) == 0x000128, "Wrong size on PrologueBunny_C_PlayEpicMonsterFightMoveSequence");
static_assert(offsetof(PrologueBunny_C_PlayEpicMonsterFightMoveSequence, NextMoveSequence) == 0x000000, "Member 'PrologueBunny_C_PlayEpicMonsterFightMoveSequence::NextMoveSequence' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayEpicMonsterFightMoveSequence, K2Node_MakeStruct_MovieSceneSequencePlaybackSettings) == 0x000020, "Member 'PrologueBunny_C_PlayEpicMonsterFightMoveSequence::K2Node_MakeStruct_MovieSceneSequencePlaybackSettings' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayEpicMonsterFightMoveSequence, K2Node_MakeStruct_M1SequencePlayBackSettings) == 0x000048, "Member 'PrologueBunny_C_PlayEpicMonsterFightMoveSequence::K2Node_MakeStruct_M1SequencePlayBackSettings' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayEpicMonsterFightMoveSequence, CallFunc_CreateLevelSequenceActor_ReturnValue) == 0x0000C0, "Member 'PrologueBunny_C_PlayEpicMonsterFightMoveSequence::CallFunc_CreateLevelSequenceActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayEpicMonsterFightMoveSequence, CallFunc_SelectNextEpicMonsterFightMove_OutMoveKey) == 0x0000C8, "Member 'PrologueBunny_C_PlayEpicMonsterFightMoveSequence::CallFunc_SelectNextEpicMonsterFightMove_OutMoveKey' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayEpicMonsterFightMoveSequence, CallFunc_Map_Find_Value) == 0x0000D8, "Member 'PrologueBunny_C_PlayEpicMonsterFightMoveSequence::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayEpicMonsterFightMoveSequence, CallFunc_Map_Find_ReturnValue) == 0x0000F8, "Member 'PrologueBunny_C_PlayEpicMonsterFightMoveSequence::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayEpicMonsterFightMoveSequence, CallFunc_RandomFloatInRange_ReturnValue) == 0x000100, "Member 'PrologueBunny_C_PlayEpicMonsterFightMoveSequence::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayEpicMonsterFightMoveSequence, CallFunc_K2_SetTimer_ReturnValue) == 0x000108, "Member 'PrologueBunny_C_PlayEpicMonsterFightMoveSequence::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayEpicMonsterFightMoveSequence, CallFunc_RandomFloatInRange_Max_ImplicitCast) == 0x000110, "Member 'PrologueBunny_C_PlayEpicMonsterFightMoveSequence::CallFunc_RandomFloatInRange_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayEpicMonsterFightMoveSequence, CallFunc_RandomFloatInRange_Min_ImplicitCast) == 0x000118, "Member 'PrologueBunny_C_PlayEpicMonsterFightMoveSequence::CallFunc_RandomFloatInRange_Min_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayEpicMonsterFightMoveSequence, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000120, "Member 'PrologueBunny_C_PlayEpicMonsterFightMoveSequence::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.PlayDialog
// 0x0020 (0x0020 - 0x0000)
struct PrologueBunny_C_PlayDialog final
{
public:
	class FName                                   DialogRowName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FM1PlayDialogContext                   K2Node_MakeStruct_M1PlayDialogContext;             // 0x0008(0x0010)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_PlayDialog) == 0x000008, "Wrong alignment on PrologueBunny_C_PlayDialog");
static_assert(sizeof(PrologueBunny_C_PlayDialog) == 0x000020, "Wrong size on PrologueBunny_C_PlayDialog");
static_assert(offsetof(PrologueBunny_C_PlayDialog, DialogRowName) == 0x000000, "Member 'PrologueBunny_C_PlayDialog::DialogRowName' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayDialog, K2Node_MakeStruct_M1PlayDialogContext) == 0x000008, "Member 'PrologueBunny_C_PlayDialog::K2Node_MakeStruct_M1PlayDialogContext' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayDialog, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'PrologueBunny_C_PlayDialog::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.PlayBridgeCrossSequence
// 0x00A8 (0x00A8 - 0x0000)
struct PrologueBunny_C_PlayBridgeCrossSequence final
{
public:
	struct FMovieSceneSequencePlaybackSettings    K2Node_MakeStruct_MovieSceneSequencePlaybackSettings; // 0x0000(0x0024)(NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1SequencePlayBackSettings            K2Node_MakeStruct_M1SequencePlayBackSettings;      // 0x0028(0x0078)()
	class AM1LevelSequenceActor*                  CallFunc_CreateLevelSequenceActor_ReturnValue;     // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_PlayBridgeCrossSequence) == 0x000008, "Wrong alignment on PrologueBunny_C_PlayBridgeCrossSequence");
static_assert(sizeof(PrologueBunny_C_PlayBridgeCrossSequence) == 0x0000A8, "Wrong size on PrologueBunny_C_PlayBridgeCrossSequence");
static_assert(offsetof(PrologueBunny_C_PlayBridgeCrossSequence, K2Node_MakeStruct_MovieSceneSequencePlaybackSettings) == 0x000000, "Member 'PrologueBunny_C_PlayBridgeCrossSequence::K2Node_MakeStruct_MovieSceneSequencePlaybackSettings' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayBridgeCrossSequence, K2Node_MakeStruct_M1SequencePlayBackSettings) == 0x000028, "Member 'PrologueBunny_C_PlayBridgeCrossSequence::K2Node_MakeStruct_M1SequencePlayBackSettings' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_PlayBridgeCrossSequence, CallFunc_CreateLevelSequenceActor_ReturnValue) == 0x0000A0, "Member 'PrologueBunny_C_PlayBridgeCrossSequence::CallFunc_CreateLevelSequenceActor_ReturnValue' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.PauseCharacterMovement
// 0x0001 (0x0001 - 0x0000)
struct PrologueBunny_C_PauseCharacterMovement final
{
public:
	bool                                          bPause;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_PauseCharacterMovement) == 0x000001, "Wrong alignment on PrologueBunny_C_PauseCharacterMovement");
static_assert(sizeof(PrologueBunny_C_PauseCharacterMovement) == 0x000001, "Wrong size on PrologueBunny_C_PauseCharacterMovement");
static_assert(offsetof(PrologueBunny_C_PauseCharacterMovement, bPause) == 0x000000, "Member 'PrologueBunny_C_PauseCharacterMovement::bPause' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.MoveToDestByLerp
// 0x01B0 (0x01B0 - 0x0000)
struct PrologueBunny_C_MoveToDestByLerp final
{
public:
	struct FTransform                             Dest;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaTime;                                         // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFinished;                                         // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LerpAlpha;                                         // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0090(0x0030)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x00FC(0x009C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RLerp_Alpha_ImplicitCast;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_MoveToDestByLerp) == 0x000010, "Wrong alignment on PrologueBunny_C_MoveToDestByLerp");
static_assert(sizeof(PrologueBunny_C_MoveToDestByLerp) == 0x0001B0, "Wrong size on PrologueBunny_C_MoveToDestByLerp");
static_assert(offsetof(PrologueBunny_C_MoveToDestByLerp, Dest) == 0x000000, "Member 'PrologueBunny_C_MoveToDestByLerp::Dest' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveToDestByLerp, DeltaTime) == 0x000030, "Member 'PrologueBunny_C_MoveToDestByLerp::DeltaTime' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveToDestByLerp, bFinished) == 0x000038, "Member 'PrologueBunny_C_MoveToDestByLerp::bFinished' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveToDestByLerp, LerpAlpha) == 0x000040, "Member 'PrologueBunny_C_MoveToDestByLerp::LerpAlpha' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveToDestByLerp, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'PrologueBunny_C_MoveToDestByLerp::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveToDestByLerp, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'PrologueBunny_C_MoveToDestByLerp::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveToDestByLerp, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000058, "Member 'PrologueBunny_C_MoveToDestByLerp::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveToDestByLerp, CallFunc_BreakTransform_Location) == 0x00005C, "Member 'PrologueBunny_C_MoveToDestByLerp::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveToDestByLerp, CallFunc_BreakTransform_Rotation) == 0x000068, "Member 'PrologueBunny_C_MoveToDestByLerp::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveToDestByLerp, CallFunc_BreakTransform_Scale) == 0x000074, "Member 'PrologueBunny_C_MoveToDestByLerp::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveToDestByLerp, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'PrologueBunny_C_MoveToDestByLerp::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveToDestByLerp, CallFunc_GetTransform_ReturnValue) == 0x000090, "Member 'PrologueBunny_C_MoveToDestByLerp::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveToDestByLerp, CallFunc_BreakTransform_Location_1) == 0x0000C0, "Member 'PrologueBunny_C_MoveToDestByLerp::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveToDestByLerp, CallFunc_BreakTransform_Rotation_1) == 0x0000CC, "Member 'PrologueBunny_C_MoveToDestByLerp::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveToDestByLerp, CallFunc_BreakTransform_Scale_1) == 0x0000D8, "Member 'PrologueBunny_C_MoveToDestByLerp::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveToDestByLerp, CallFunc_RLerp_ReturnValue) == 0x0000E4, "Member 'PrologueBunny_C_MoveToDestByLerp::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveToDestByLerp, CallFunc_VLerp_ReturnValue) == 0x0000F0, "Member 'PrologueBunny_C_MoveToDestByLerp::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveToDestByLerp, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x0000FC, "Member 'PrologueBunny_C_MoveToDestByLerp::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveToDestByLerp, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000198, "Member 'PrologueBunny_C_MoveToDestByLerp::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveToDestByLerp, CallFunc_VLerp_Alpha_ImplicitCast) == 0x00019C, "Member 'PrologueBunny_C_MoveToDestByLerp::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveToDestByLerp, CallFunc_RLerp_Alpha_ImplicitCast) == 0x0001A0, "Member 'PrologueBunny_C_MoveToDestByLerp::CallFunc_RLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.MoveAlongSpline
// 0x0160 (0x0160 - 0x0000)
struct PrologueBunny_C_MoveAlongSpline final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMoveComplete;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DestDiff;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               DestRotation;                                      // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                DestLocation;                                      // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ConditionalCompleteMoveAlong_bMoveCompleted; // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MoveToDestByLerp_bFinished;               // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ConditionalPauseMoveAlong_bMovePaused;    // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationAtTime_ReturnValue;            // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLocationAtTime_ReturnValue;            // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindDirectionClosestToWorldLocation_ReturnValue; // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_2;                          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_MoveAlongSpline) == 0x000010, "Wrong alignment on PrologueBunny_C_MoveAlongSpline");
static_assert(sizeof(PrologueBunny_C_MoveAlongSpline) == 0x000160, "Wrong size on PrologueBunny_C_MoveAlongSpline");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, DeltaTime) == 0x000000, "Member 'PrologueBunny_C_MoveAlongSpline::DeltaTime' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, bMoveComplete) == 0x000008, "Member 'PrologueBunny_C_MoveAlongSpline::bMoveComplete' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, DestDiff) == 0x000010, "Member 'PrologueBunny_C_MoveAlongSpline::DestDiff' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, DestRotation) == 0x000018, "Member 'PrologueBunny_C_MoveAlongSpline::DestRotation' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, DestLocation) == 0x000024, "Member 'PrologueBunny_C_MoveAlongSpline::DestLocation' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_ConditionalCompleteMoveAlong_bMoveCompleted) == 0x00003C, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_ConditionalCompleteMoveAlong_bMoveCompleted' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000070, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_MoveToDestByLerp_bFinished) == 0x000071, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_MoveToDestByLerp_bFinished' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000074, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_BreakVector_X) == 0x000080, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_BreakVector_Y) == 0x000088, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_BreakVector_Z) == 0x000090, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000098, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_MakeVector_ReturnValue) == 0x0000A4, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0000B0, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_BreakVector_X_1) == 0x0000C0, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_BreakVector_Y_1) == 0x0000C8, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_BreakVector_Z_1) == 0x0000D0, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_MakeVector_ReturnValue_1) == 0x0000D8, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x0000E4, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_ConditionalPauseMoveAlong_bMovePaused) == 0x0000E5, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_ConditionalPauseMoveAlong_bMovePaused' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000E8, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_Vector_Distance2D_ReturnValue) == 0x0000F8, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_GetRotationAtTime_ReturnValue) == 0x000100, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_GetRotationAtTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_GetLocationAtTime_ReturnValue) == 0x00010C, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_GetLocationAtTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000118, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_FindDirectionClosestToWorldLocation_ReturnValue) == 0x000124, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_FindDirectionClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_IsValid_ReturnValue) == 0x000130, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_BreakVector_X_2) == 0x000138, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_BreakVector_Y_2) == 0x000140, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_BreakVector_Z_2) == 0x000148, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_MoveAlongSpline, CallFunc_MakeVector_ReturnValue_2) == 0x000150, "Member 'PrologueBunny_C_MoveAlongSpline::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.LookAtEpicMonster
// 0x0014 (0x0014 - 0x0000)
struct PrologueBunny_C_LookAtEpicMonster final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_AddTaggedFloatVariantTo_Value_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_LookAtEpicMonster) == 0x000004, "Wrong alignment on PrologueBunny_C_LookAtEpicMonster");
static_assert(sizeof(PrologueBunny_C_LookAtEpicMonster) == 0x000014, "Wrong size on PrologueBunny_C_LookAtEpicMonster");
static_assert(offsetof(PrologueBunny_C_LookAtEpicMonster, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'PrologueBunny_C_LookAtEpicMonster::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_LookAtEpicMonster, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'PrologueBunny_C_LookAtEpicMonster::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_LookAtEpicMonster, CallFunc_AddTaggedFloatVariantTo_Value_ImplicitCast) == 0x000010, "Member 'PrologueBunny_C_LookAtEpicMonster::CallFunc_AddTaggedFloatVariantTo_Value_ImplicitCast' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.ExecuteUbergraph_PrologueBunny
// 0x0248 (0x0248 - 0x0000)
struct PrologueBunny_C_ExecuteUbergraph_PrologueBunny final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1PlayDialogContext                   K2Node_MakeStruct_M1PlayDialogContext;             // 0x0008(0x0010)(NoDestructor)
	TDelegate<void(EM1StatType StatType)>         K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MoveAlongSpline_bMoveComplete;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAssetData                             K2Node_Event_RootSequence_1;                       // 0x0030(0x0068)(ConstParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_1;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Character*                           K2Node_DynamicCast_AsM1Character;                  // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAssetData                             K2Node_Event_RootSequence;                         // 0x00C0(0x0068)(ConstParm, HasGetValueTypeHash)
	class FString                                 CallFunc_GetStringId_ReturnValue;                  // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value;                           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x014C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0154(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x015C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, EM1EquipmentSlotType>       K2Node_MakeMap_Map;                                // 0x0168(0x0050)(ConstParm)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_3;            // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_4;            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_5;            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UM1DialogAkComponent*                   CallFunc_CreateDialogComponent_ReturnValue;        // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EM1StatType                                   K2Node_CustomEvent_StatType;                       // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1StatComponent*                       CallFunc_GetStatComponent_ReturnValue;             // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FM1PlayDialogContext                   K2Node_MakeStruct_M1PlayDialogContext_1;           // 0x01E8(0x0010)(NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1PlayDialogContext                   K2Node_MakeStruct_M1PlayDialogContext_2;           // 0x0200(0x0010)(NoDestructor)
	struct FM1PlayDialogContext                   K2Node_MakeStruct_M1PlayDialogContext_3;           // 0x0210(0x0010)(NoDestructor)
	struct FM1PlayDialogContext                   K2Node_MakeStruct_M1PlayDialogContext_4;           // 0x0220(0x0010)(NoDestructor)
	struct FM1PlayDialogContext                   K2Node_MakeStruct_M1PlayDialogContext_5;           // 0x0230(0x0010)(NoDestructor)
	double                                        CallFunc_MoveAlongSpline_DeltaTime_ImplicitCast;   // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny) == 0x000008, "Wrong alignment on PrologueBunny_C_ExecuteUbergraph_PrologueBunny");
static_assert(sizeof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny) == 0x000248, "Wrong size on PrologueBunny_C_ExecuteUbergraph_PrologueBunny");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, EntryPoint) == 0x000000, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::EntryPoint' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, K2Node_MakeStruct_M1PlayDialogContext) == 0x000008, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::K2Node_MakeStruct_M1PlayDialogContext' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, K2Node_Event_DeltaSeconds) == 0x000028, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, CallFunc_MoveAlongSpline_bMoveComplete) == 0x00002C, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::CallFunc_MoveAlongSpline_bMoveComplete' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, K2Node_SwitchName_CmpSuccess) == 0x00002D, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, K2Node_Event_RootSequence_1) == 0x000030, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::K2Node_Event_RootSequence_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, K2Node_SwitchName_CmpSuccess_1) == 0x000099, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::K2Node_SwitchName_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, CallFunc_GetPlayerController_ReturnValue) == 0x0000A0, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, CallFunc_K2_GetPawn_ReturnValue) == 0x0000A8, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, K2Node_DynamicCast_AsM1Character) == 0x0000B0, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::K2Node_DynamicCast_AsM1Character' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, K2Node_Event_RootSequence) == 0x0000C0, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::K2Node_Event_RootSequence' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, CallFunc_GetStringId_ReturnValue) == 0x000128, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::CallFunc_GetStringId_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, CallFunc_Conv_StringToName_ReturnValue) == 0x000138, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, CallFunc_Map_Find_Value) == 0x000140, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, CallFunc_Map_Find_ReturnValue) == 0x000148, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, CallFunc_MakeLiteralName_ReturnValue) == 0x00014C, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000154, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, CallFunc_MakeLiteralName_ReturnValue_2) == 0x00015C, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, K2Node_MakeMap_Map) == 0x000168, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, CallFunc_MakeLiteralName_ReturnValue_3) == 0x0001B8, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::CallFunc_MakeLiteralName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, CallFunc_MakeLiteralName_ReturnValue_4) == 0x0001C0, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::CallFunc_MakeLiteralName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, CallFunc_MakeLiteralName_ReturnValue_5) == 0x0001C8, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::CallFunc_MakeLiteralName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, CallFunc_CreateDialogComponent_ReturnValue) == 0x0001D0, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::CallFunc_CreateDialogComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, K2Node_CustomEvent_StatType) == 0x0001D8, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::K2Node_CustomEvent_StatType' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, CallFunc_GetStatComponent_ReturnValue) == 0x0001E0, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::CallFunc_GetStatComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, K2Node_MakeStruct_M1PlayDialogContext_1) == 0x0001E8, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::K2Node_MakeStruct_M1PlayDialogContext_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0001F8, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, K2Node_MakeStruct_M1PlayDialogContext_2) == 0x000200, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::K2Node_MakeStruct_M1PlayDialogContext_2' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, K2Node_MakeStruct_M1PlayDialogContext_3) == 0x000210, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::K2Node_MakeStruct_M1PlayDialogContext_3' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, K2Node_MakeStruct_M1PlayDialogContext_4) == 0x000220, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::K2Node_MakeStruct_M1PlayDialogContext_4' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, K2Node_MakeStruct_M1PlayDialogContext_5) == 0x000230, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::K2Node_MakeStruct_M1PlayDialogContext_5' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ExecuteUbergraph_PrologueBunny, CallFunc_MoveAlongSpline_DeltaTime_ImplicitCast) == 0x000240, "Member 'PrologueBunny_C_ExecuteUbergraph_PrologueBunny::CallFunc_MoveAlongSpline_DeltaTime_ImplicitCast' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.ConditionalSprint
// 0x00D8 (0x00D8 - 0x0000)
struct PrologueBunny_C_ConditionalSprint final
{
public:
	struct FM1ScaledInteger                       OverrideSprintSpeed;                               // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	double                                        SprintSpeed2;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SprintSpeed1;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceDiff;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EM1StatType, struct FM1ScaledInteger>    K2Node_MakeMap_Map;                                // 0x0028(0x0050)(ConstParm)
	double                                        K2Node_Select_Default;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FM1ScaledInteger                       CallFunc_FromFloat_ReturnValue;                    // 0x0080(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Player*                              K2Node_DynamicCast_AsM1Player;                     // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSprinting_ReturnValue;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TrySprint_ReturnValue;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FromFloat_InValue_ImplicitCast;           // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_ConditionalSprint) == 0x000008, "Wrong alignment on PrologueBunny_C_ConditionalSprint");
static_assert(sizeof(PrologueBunny_C_ConditionalSprint) == 0x0000D8, "Wrong size on PrologueBunny_C_ConditionalSprint");
static_assert(offsetof(PrologueBunny_C_ConditionalSprint, OverrideSprintSpeed) == 0x000000, "Member 'PrologueBunny_C_ConditionalSprint::OverrideSprintSpeed' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalSprint, SprintSpeed2) == 0x000008, "Member 'PrologueBunny_C_ConditionalSprint::SprintSpeed2' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalSprint, SprintSpeed1) == 0x000010, "Member 'PrologueBunny_C_ConditionalSprint::SprintSpeed1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalSprint, DistanceDiff) == 0x000018, "Member 'PrologueBunny_C_ConditionalSprint::DistanceDiff' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalSprint, Temp_bool_Variable) == 0x000020, "Member 'PrologueBunny_C_ConditionalSprint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalSprint, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000021, "Member 'PrologueBunny_C_ConditionalSprint::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalSprint, K2Node_MakeMap_Map) == 0x000028, "Member 'PrologueBunny_C_ConditionalSprint::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalSprint, K2Node_Select_Default) == 0x000078, "Member 'PrologueBunny_C_ConditionalSprint::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalSprint, CallFunc_FromFloat_ReturnValue) == 0x000080, "Member 'PrologueBunny_C_ConditionalSprint::CallFunc_FromFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalSprint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000088, "Member 'PrologueBunny_C_ConditionalSprint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalSprint, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000094, "Member 'PrologueBunny_C_ConditionalSprint::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalSprint, CallFunc_GetPlayerController_ReturnValue) == 0x000098, "Member 'PrologueBunny_C_ConditionalSprint::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalSprint, CallFunc_K2_GetPawn_ReturnValue) == 0x0000A0, "Member 'PrologueBunny_C_ConditionalSprint::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalSprint, K2Node_DynamicCast_AsM1Player) == 0x0000A8, "Member 'PrologueBunny_C_ConditionalSprint::K2Node_DynamicCast_AsM1Player' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalSprint, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'PrologueBunny_C_ConditionalSprint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalSprint, CallFunc_IsSprinting_ReturnValue) == 0x0000B1, "Member 'PrologueBunny_C_ConditionalSprint::CallFunc_IsSprinting_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalSprint, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000B4, "Member 'PrologueBunny_C_ConditionalSprint::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalSprint, CallFunc_BooleanOR_ReturnValue) == 0x0000C0, "Member 'PrologueBunny_C_ConditionalSprint::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalSprint, CallFunc_Vector_Distance2D_ReturnValue) == 0x0000C8, "Member 'PrologueBunny_C_ConditionalSprint::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalSprint, CallFunc_TrySprint_ReturnValue) == 0x0000D0, "Member 'PrologueBunny_C_ConditionalSprint::CallFunc_TrySprint_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalSprint, CallFunc_FromFloat_InValue_ImplicitCast) == 0x0000D4, "Member 'PrologueBunny_C_ConditionalSprint::CallFunc_FromFloat_InValue_ImplicitCast' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.ConditionalRotateToPlayer
// 0x0058 (0x0058 - 0x0000)
struct PrologueBunny_C_ConditionalRotateToPlayer final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_ConditionalRotateToPlayer) == 0x000008, "Wrong alignment on PrologueBunny_C_ConditionalRotateToPlayer");
static_assert(sizeof(PrologueBunny_C_ConditionalRotateToPlayer) == 0x000058, "Wrong size on PrologueBunny_C_ConditionalRotateToPlayer");
static_assert(offsetof(PrologueBunny_C_ConditionalRotateToPlayer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'PrologueBunny_C_ConditionalRotateToPlayer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalRotateToPlayer, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'PrologueBunny_C_ConditionalRotateToPlayer::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalRotateToPlayer, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'PrologueBunny_C_ConditionalRotateToPlayer::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalRotateToPlayer, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000020, "Member 'PrologueBunny_C_ConditionalRotateToPlayer::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalRotateToPlayer, CallFunc_BooleanAND_ReturnValue) == 0x00002C, "Member 'PrologueBunny_C_ConditionalRotateToPlayer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalRotateToPlayer, CallFunc_FindLookAtRotation_ReturnValue) == 0x000030, "Member 'PrologueBunny_C_ConditionalRotateToPlayer::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalRotateToPlayer, CallFunc_BreakRotator_Roll) == 0x00003C, "Member 'PrologueBunny_C_ConditionalRotateToPlayer::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalRotateToPlayer, CallFunc_BreakRotator_Pitch) == 0x000040, "Member 'PrologueBunny_C_ConditionalRotateToPlayer::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalRotateToPlayer, CallFunc_BreakRotator_Yaw) == 0x000044, "Member 'PrologueBunny_C_ConditionalRotateToPlayer::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalRotateToPlayer, CallFunc_MakeRotator_ReturnValue) == 0x000048, "Member 'PrologueBunny_C_ConditionalRotateToPlayer::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalRotateToPlayer, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000054, "Member 'PrologueBunny_C_ConditionalRotateToPlayer::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.ConditionalPauseMoveAlong
// 0x0018 (0x0018 - 0x0000)
struct PrologueBunny_C_ConditionalPauseMoveAlong final
{
public:
	bool                                          bMovePaused;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActive_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NeedResumeMoveAlong_bResume;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NeedPauseMoveAlong_bStop;                 // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_ConditionalPauseMoveAlong) == 0x000008, "Wrong alignment on PrologueBunny_C_ConditionalPauseMoveAlong");
static_assert(sizeof(PrologueBunny_C_ConditionalPauseMoveAlong) == 0x000018, "Wrong size on PrologueBunny_C_ConditionalPauseMoveAlong");
static_assert(offsetof(PrologueBunny_C_ConditionalPauseMoveAlong, bMovePaused) == 0x000000, "Member 'PrologueBunny_C_ConditionalPauseMoveAlong::bMovePaused' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalPauseMoveAlong, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'PrologueBunny_C_ConditionalPauseMoveAlong::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalPauseMoveAlong, CallFunc_K2_IsTimerActive_ReturnValue) == 0x000010, "Member 'PrologueBunny_C_ConditionalPauseMoveAlong::CallFunc_K2_IsTimerActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalPauseMoveAlong, CallFunc_NeedResumeMoveAlong_bResume) == 0x000011, "Member 'PrologueBunny_C_ConditionalPauseMoveAlong::CallFunc_NeedResumeMoveAlong_bResume' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalPauseMoveAlong, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'PrologueBunny_C_ConditionalPauseMoveAlong::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalPauseMoveAlong, CallFunc_NeedPauseMoveAlong_bStop) == 0x000013, "Member 'PrologueBunny_C_ConditionalPauseMoveAlong::CallFunc_NeedPauseMoveAlong_bStop' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalPauseMoveAlong, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000014, "Member 'PrologueBunny_C_ConditionalPauseMoveAlong::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.ConditionalDialogByEpicMonsterHP
// 0x0040 (0x0040 - 0x0000)
struct PrologueBunny_C_ConditionalDialogByEpicMonsterHP final
{
public:
	EM1StatType                                   StatType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurHPRatio;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Remove_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0014(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x001C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Remove_ReturnValue_1;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Remove_ReturnValue_2;                 // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGaugeStatRatio_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_1;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_ConditionalDialogByEpicMonsterHP) == 0x000008, "Wrong alignment on PrologueBunny_C_ConditionalDialogByEpicMonsterHP");
static_assert(sizeof(PrologueBunny_C_ConditionalDialogByEpicMonsterHP) == 0x000040, "Wrong size on PrologueBunny_C_ConditionalDialogByEpicMonsterHP");
static_assert(offsetof(PrologueBunny_C_ConditionalDialogByEpicMonsterHP, StatType) == 0x000000, "Member 'PrologueBunny_C_ConditionalDialogByEpicMonsterHP::StatType' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalDialogByEpicMonsterHP, CurHPRatio) == 0x000004, "Member 'PrologueBunny_C_ConditionalDialogByEpicMonsterHP::CurHPRatio' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalDialogByEpicMonsterHP, Temp_name_Variable) == 0x000008, "Member 'PrologueBunny_C_ConditionalDialogByEpicMonsterHP::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalDialogByEpicMonsterHP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'PrologueBunny_C_ConditionalDialogByEpicMonsterHP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalDialogByEpicMonsterHP, CallFunc_Set_Remove_ReturnValue) == 0x000011, "Member 'PrologueBunny_C_ConditionalDialogByEpicMonsterHP::CallFunc_Set_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalDialogByEpicMonsterHP, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000012, "Member 'PrologueBunny_C_ConditionalDialogByEpicMonsterHP::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalDialogByEpicMonsterHP, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000013, "Member 'PrologueBunny_C_ConditionalDialogByEpicMonsterHP::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalDialogByEpicMonsterHP, Temp_name_Variable_1) == 0x000014, "Member 'PrologueBunny_C_ConditionalDialogByEpicMonsterHP::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalDialogByEpicMonsterHP, Temp_name_Variable_2) == 0x00001C, "Member 'PrologueBunny_C_ConditionalDialogByEpicMonsterHP::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalDialogByEpicMonsterHP, CallFunc_Set_Remove_ReturnValue_1) == 0x000024, "Member 'PrologueBunny_C_ConditionalDialogByEpicMonsterHP::CallFunc_Set_Remove_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalDialogByEpicMonsterHP, CallFunc_Set_Remove_ReturnValue_2) == 0x000025, "Member 'PrologueBunny_C_ConditionalDialogByEpicMonsterHP::CallFunc_Set_Remove_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalDialogByEpicMonsterHP, CallFunc_GetGaugeStatRatio_ReturnValue) == 0x000028, "Member 'PrologueBunny_C_ConditionalDialogByEpicMonsterHP::CallFunc_GetGaugeStatRatio_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalDialogByEpicMonsterHP, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'PrologueBunny_C_ConditionalDialogByEpicMonsterHP::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalDialogByEpicMonsterHP, CallFunc_Less_DoubleDouble_A_ImplicitCast_1) == 0x000038, "Member 'PrologueBunny_C_ConditionalDialogByEpicMonsterHP::CallFunc_Less_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.ConditionalCompleteMoveAlong
// 0x0002 (0x0002 - 0x0000)
struct PrologueBunny_C_ConditionalCompleteMoveAlong final
{
public:
	bool                                          bMoveCompleted;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NeedResumeMoveAlong_bResume;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_ConditionalCompleteMoveAlong) == 0x000001, "Wrong alignment on PrologueBunny_C_ConditionalCompleteMoveAlong");
static_assert(sizeof(PrologueBunny_C_ConditionalCompleteMoveAlong) == 0x000002, "Wrong size on PrologueBunny_C_ConditionalCompleteMoveAlong");
static_assert(offsetof(PrologueBunny_C_ConditionalCompleteMoveAlong, bMoveCompleted) == 0x000000, "Member 'PrologueBunny_C_ConditionalCompleteMoveAlong::bMoveCompleted' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ConditionalCompleteMoveAlong, CallFunc_NeedResumeMoveAlong_bResume) == 0x000001, "Member 'PrologueBunny_C_ConditionalCompleteMoveAlong::CallFunc_NeedResumeMoveAlong_bResume' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.BP_OnSequenceUnbounded
// 0x0068 (0x0068 - 0x0000)
struct PrologueBunny_C_BP_OnSequenceUnbounded final
{
public:
	struct FAssetData                             RootSequence;                                      // 0x0000(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_BP_OnSequenceUnbounded) == 0x000008, "Wrong alignment on PrologueBunny_C_BP_OnSequenceUnbounded");
static_assert(sizeof(PrologueBunny_C_BP_OnSequenceUnbounded) == 0x000068, "Wrong size on PrologueBunny_C_BP_OnSequenceUnbounded");
static_assert(offsetof(PrologueBunny_C_BP_OnSequenceUnbounded, RootSequence) == 0x000000, "Member 'PrologueBunny_C_BP_OnSequenceUnbounded::RootSequence' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.BP_OnSequenceBounded
// 0x0068 (0x0068 - 0x0000)
struct PrologueBunny_C_BP_OnSequenceBounded final
{
public:
	struct FAssetData                             RootSequence;                                      // 0x0000(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_BP_OnSequenceBounded) == 0x000008, "Wrong alignment on PrologueBunny_C_BP_OnSequenceBounded");
static_assert(sizeof(PrologueBunny_C_BP_OnSequenceBounded) == 0x000068, "Wrong size on PrologueBunny_C_BP_OnSequenceBounded");
static_assert(offsetof(PrologueBunny_C_BP_OnSequenceBounded, RootSequence) == 0x000000, "Member 'PrologueBunny_C_BP_OnSequenceBounded::RootSequence' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.BossHPChanged
// 0x0001 (0x0001 - 0x0000)
struct PrologueBunny_C_BossHPChanged final
{
public:
	EM1StatType                                   StatType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_BossHPChanged) == 0x000001, "Wrong alignment on PrologueBunny_C_BossHPChanged");
static_assert(sizeof(PrologueBunny_C_BossHPChanged) == 0x000001, "Wrong size on PrologueBunny_C_BossHPChanged");
static_assert(offsetof(PrologueBunny_C_BossHPChanged, StatType) == 0x000000, "Member 'PrologueBunny_C_BossHPChanged::StatType' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.AttackEpicMonster
// 0x0003 (0x0003 - 0x0000)
struct PrologueBunny_C_AttackEpicMonster final
{
public:
	bool                                          CallFunc_IsSequencerBound_ReturnValue;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_AttackEpicMonster) == 0x000001, "Wrong alignment on PrologueBunny_C_AttackEpicMonster");
static_assert(sizeof(PrologueBunny_C_AttackEpicMonster) == 0x000003, "Wrong size on PrologueBunny_C_AttackEpicMonster");
static_assert(offsetof(PrologueBunny_C_AttackEpicMonster, CallFunc_IsSequencerBound_ReturnValue) == 0x000000, "Member 'PrologueBunny_C_AttackEpicMonster::CallFunc_IsSequencerBound_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_AttackEpicMonster, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'PrologueBunny_C_AttackEpicMonster::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_AttackEpicMonster, CallFunc_IsDead_ReturnValue) == 0x000002, "Member 'PrologueBunny_C_AttackEpicMonster::CallFunc_IsDead_ReturnValue' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.ApplyDialogSetting
// 0x0028 (0x0028 - 0x0000)
struct PrologueBunny_C_ApplyDialogSetting final
{
public:
	bool                                          bIsSelfTalking;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRadioVoice;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_1;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRTPCValue_Value_ImplicitCast;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRTPCValue_Value_ImplicitCast_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_ApplyDialogSetting) == 0x000008, "Wrong alignment on PrologueBunny_C_ApplyDialogSetting");
static_assert(sizeof(PrologueBunny_C_ApplyDialogSetting) == 0x000028, "Wrong size on PrologueBunny_C_ApplyDialogSetting");
static_assert(offsetof(PrologueBunny_C_ApplyDialogSetting, bIsSelfTalking) == 0x000000, "Member 'PrologueBunny_C_ApplyDialogSetting::bIsSelfTalking' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ApplyDialogSetting, bIsRadioVoice) == 0x000001, "Member 'PrologueBunny_C_ApplyDialogSetting::bIsRadioVoice' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ApplyDialogSetting, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000008, "Member 'PrologueBunny_C_ApplyDialogSetting::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ApplyDialogSetting, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PrologueBunny_C_ApplyDialogSetting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ApplyDialogSetting, CallFunc_Conv_BoolToDouble_ReturnValue_1) == 0x000018, "Member 'PrologueBunny_C_ApplyDialogSetting::CallFunc_Conv_BoolToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ApplyDialogSetting, CallFunc_SetRTPCValue_Value_ImplicitCast) == 0x000020, "Member 'PrologueBunny_C_ApplyDialogSetting::CallFunc_SetRTPCValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_ApplyDialogSetting, CallFunc_SetRTPCValue_Value_ImplicitCast_1) == 0x000024, "Member 'PrologueBunny_C_ApplyDialogSetting::CallFunc_SetRTPCValue_Value_ImplicitCast_1' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.NeedResumeMoveAlong
// 0x0040 (0x0040 - 0x0000)
struct PrologueBunny_C_NeedResumeMoveAlong final
{
public:
	bool                                          bResume;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_NeedResumeMoveAlong) == 0x000008, "Wrong alignment on PrologueBunny_C_NeedResumeMoveAlong");
static_assert(sizeof(PrologueBunny_C_NeedResumeMoveAlong) == 0x000040, "Wrong size on PrologueBunny_C_NeedResumeMoveAlong");
static_assert(offsetof(PrologueBunny_C_NeedResumeMoveAlong, bResume) == 0x000000, "Member 'PrologueBunny_C_NeedResumeMoveAlong::bResume' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_NeedResumeMoveAlong, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'PrologueBunny_C_NeedResumeMoveAlong::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_NeedResumeMoveAlong, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'PrologueBunny_C_NeedResumeMoveAlong::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_NeedResumeMoveAlong, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'PrologueBunny_C_NeedResumeMoveAlong::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_NeedResumeMoveAlong, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000020, "Member 'PrologueBunny_C_NeedResumeMoveAlong::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_NeedResumeMoveAlong, CallFunc_Vector_Distance2D_ReturnValue) == 0x000030, "Member 'PrologueBunny_C_NeedResumeMoveAlong::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_NeedResumeMoveAlong, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000038, "Member 'PrologueBunny_C_NeedResumeMoveAlong::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.NeedPauseMoveAlong
// 0x0040 (0x0040 - 0x0000)
struct PrologueBunny_C_NeedPauseMoveAlong final
{
public:
	bool                                          bStop;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_NeedPauseMoveAlong) == 0x000008, "Wrong alignment on PrologueBunny_C_NeedPauseMoveAlong");
static_assert(sizeof(PrologueBunny_C_NeedPauseMoveAlong) == 0x000040, "Wrong size on PrologueBunny_C_NeedPauseMoveAlong");
static_assert(offsetof(PrologueBunny_C_NeedPauseMoveAlong, bStop) == 0x000000, "Member 'PrologueBunny_C_NeedPauseMoveAlong::bStop' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_NeedPauseMoveAlong, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'PrologueBunny_C_NeedPauseMoveAlong::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_NeedPauseMoveAlong, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'PrologueBunny_C_NeedPauseMoveAlong::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_NeedPauseMoveAlong, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'PrologueBunny_C_NeedPauseMoveAlong::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_NeedPauseMoveAlong, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000020, "Member 'PrologueBunny_C_NeedPauseMoveAlong::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_NeedPauseMoveAlong, CallFunc_Vector_Distance2D_ReturnValue) == 0x000030, "Member 'PrologueBunny_C_NeedPauseMoveAlong::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_NeedPauseMoveAlong, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000038, "Member 'PrologueBunny_C_NeedPauseMoveAlong::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function PrologueBunny.PrologueBunny_C.GetSceneNumber
// 0x0070 (0x0070 - 0x0000)
struct PrologueBunny_C_GetSceneNumber final
{
public:
	struct FAssetData                             Sequence;                                          // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         OutNumber;                                         // 0x0068(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PrologueBunny_C_GetSceneNumber) == 0x000008, "Wrong alignment on PrologueBunny_C_GetSceneNumber");
static_assert(sizeof(PrologueBunny_C_GetSceneNumber) == 0x000070, "Wrong size on PrologueBunny_C_GetSceneNumber");
static_assert(offsetof(PrologueBunny_C_GetSceneNumber, Sequence) == 0x000000, "Member 'PrologueBunny_C_GetSceneNumber::Sequence' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_GetSceneNumber, OutNumber) == 0x000068, "Member 'PrologueBunny_C_GetSceneNumber::OutNumber' has a wrong offset!");
static_assert(offsetof(PrologueBunny_C_GetSceneNumber, K2Node_SwitchName_CmpSuccess) == 0x00006C, "Member 'PrologueBunny_C_GetSceneNumber::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

}

